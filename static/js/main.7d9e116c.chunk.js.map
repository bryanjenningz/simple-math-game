{"version":3,"sources":["Main.elm","serviceWorker.js","index.js"],"names":["scope","F","arity","fun","wrapper","a","f","F2","b","F3","c","F4","d","F5","e","A2","A3","A4","A5","_Utils_eqHelp","x","y","depth","stack","push","_Utils_Tuple2","_Debug_crash","key","$","$elm$core$Dict$toList","_Utils_cmp","ord","_Utils_compare","n","$elm$core$Basics$LT","$elm$core$Basics$GT","$elm$core$Basics$EQ","_Utils_Tuple3","_Utils_update","oldRecord","updatedFields","newRecord","_List_Nil","_List_Cons","hd","tl","_List_cons","_List_fromArray","arr","out","i","length","_List_sortBy","xs","_List_toArray","sort","_JsArray_initialize","size","offset","func","result","Array","_JsArray_initializeFromList","max","ls","identifier","Error","_Basics_add","_Basics_sub","_Basics_ceiling","Math","ceil","_Basics_floor","floor","_Basics_log","log","_String_fromNumber","number","_Json_decodePrim","decoder","value","_Json_expecting","$elm$core$Result$Ok","isFinite","_Json_wrap","_Json_decodeString","String","_Json_decodeField","field","_Json_map1","d1","decoders","g","_Json_mapMany","_Json_run","_Json_runHelp","_Json_unwrap","_Json_isArray","_Json_runArrayDecoder","_Json_toElmArray","$elm$core$Result$isOk","$elm$core$Result$Err","$elm$json$Json$Decode$Field","index","$elm$json$Json$Decode$Index","keyValuePairs","hasOwnProperty","$elm$core$List$reverse","answer","h","errors","temp","$elm$json$Json$Decode$OneOf","$elm$json$Json$Decode$Failure","toElmValue","len","array","isArray","FileList","$elm$core$Array$initialize","type","_Json_equality","_Json_listEquality","aDecoders","bDecoders","_Scheduler_succeed","_Scheduler_binding","callback","_Scheduler_andThen","task","_Scheduler_guid","_Scheduler_rawSpawn","proc","_Scheduler_enqueue","_Scheduler_spawn","_Scheduler_rawSend","msg","_Scheduler_send","_Scheduler_working","_Scheduler_queue","shift","_Scheduler_step","rootTag","newRoot","_Platform_effectManagers","_Platform_createManager","init","onEffects","onSelfMsg","cmdMap","subMap","_Platform_instantiateManager","info","sendToApp","router","undefined","loop","state","j","_VirtualDom_divertHrefToApp","_Platform_sendToApp","_Platform_sendToSelf","_Platform_leaf","home","k","l","_Platform_dispatchEffects","managers","cmdBag","subBag","effectsDict","_Platform_gatherEffects","isCmd","bag","taggers","effect","q","p","_Platform_toEffect","newEffect","effects","_Platform_insert","list","m","o","_VirtualDom_doc","document","_VirtualDom_appendChild","parent","child","appendChild","_VirtualDom_text","string","_VirtualDom_node","namespace","tag","factList","kidList","kids","descendantsCount","kid","_VirtualDom_organizeFacts","_VirtualDom_nodeNS","_VirtualDom_keyedNodeNS","_VirtualDom_passiveSupported","_VirtualDom_on","handler","_VirtualDom_property","_VirtualDom_attribute","facts","entry","subFacts","_VirtualDom_addClass","object","newClass","classes","_VirtualDom_render","vNode","eventNode","createTextNode","subNode","tagger","subEventRoot","domNode","elm_event_node_ref","_VirtualDom_applyFacts","createElementNS","createElement","addEventListener","_VirtualDom_applyStyles","_VirtualDom_applyEvents","_VirtualDom_applyAttrs","_VirtualDom_applyAttrsNS","styles","domNodeStyle","style","attrs","setAttribute","removeAttribute","nsAttrs","pair","setAttributeNS","removeAttributeNS","events","allCallbacks","elmFs","newHandler","oldCallback","removeEventListener","_VirtualDom_makeCallback","passive","$elm$virtual_dom$VirtualDom$toHandlerInt","window","Object","defineProperty","get","initialHandler","event","message","t","stopPropagation","ah","currentEventNode","ad","preventDefault","_VirtualDom_equalEvents","_VirtualDom_pushPatch","patches","data","patch","r","s","u","_VirtualDom_diffHelp","xType","yType","keyedNode","keyedKids","_VirtualDom_dekey","xRefs","yRefs","same","subPatches","xTaggers","yTaggers","nesting","xSubNode","ySubNode","as","bs","_VirtualDom_pairwiseRefEqual","_VirtualDom_diffNodes","_VirtualDom_diffKids","_VirtualDom_diffKeyedKids","factsDiff","_VirtualDom_diffFacts","diffKids","category","diff","xKey","xValue","yValue","subDiff","yKey","xParent","yParent","xKids","yKids","xLen","yLen","v","minLen","xKid","rootIndex","localPatches","changes","inserts","xIndex","yIndex","xNode","yNode","newMatch","oldMatch","xNext","yNext","xNextKey","xNextNode","yNextKey","yNextNode","_VirtualDom_insertNode","_VirtualDom_removeNode","endInserts","w","_VirtualDom_POSTFIX","vnode","A","z","_VirtualDom_applyPatches","rootDomNode","oldVirtualNode","_VirtualDom_addDomNodes","_VirtualDom_addDomNodesHelp","low","high","patchType","vKids","childNodes","vKid","nextLow","_VirtualDom_applyPatchesHelp","localDomNode","newNode","_VirtualDom_applyPatch","parentNode","replaceChild","_VirtualDom_applyPatchRedraw","replaceData","removeChild","theEnd","insertBefore","frag","createDocumentFragment","_VirtualDom_applyPatchReorderEndInsertsHelp","insert","node","_VirtualDom_applyPatchReorder","_Browser_element","impl","flagDecoder","debugMetadata","args","update","subscriptions","stepperBuilder","model","stepper","ports","manager","_Platform_setupEffects","viewMetadata","_Platform_initialize","aT","a$","aZ","initialModel","view","a0","currNode","_VirtualDom_virtualize","nodeType","textContent","attrList","attributes","attr","name","tagName","toLowerCase","draw","updateIfNeeded","_Browser_requestAnimationFrame","nextModel","isSync","_Browser_makeAnimator","nextNode","_VirtualDom_diff","cancelAnimationFrame","requestAnimationFrame","setTimeout","_Time_setInterval","interval","id","setInterval","clearInterval","$elm$core$List$cons","$elm$core$Dict$foldr","acc","left","$temp$func","$temp$acc","dict","$elm$core$Basics$add","$elm$core$Maybe$Just","$elm$core$Maybe$Nothing","$elm$core$String$fromInt","$elm$core$List$foldl","$elm$core$Basics$sub","$elm$core$Array$Array_elm_builtin","$elm$core$Elm$JsArray$empty","$elm$core$Basics$ceiling","$elm$core$Basics$logBase","base","$elm$core$Array$shiftStep","$elm$core$Array$empty","$elm$core$Elm$JsArray$initialize","$elm$core$Basics$floor","$elm$core$Elm$JsArray$length","$elm$core$Basics$max","$elm$core$Elm$JsArray$initializeFromList","$elm$core$Array$compressNodes","nodes","_v0","remainingNodes","newAcc","$elm$core$Array$treeFromBuilder","nodeList","nodeListSize","newNodeSize","$elm$core$Array$builderToArray","reverseNodeList","builder","treeLen","correctNodeList","tree","$elm$core$Array$initializeHelp","fn","fromIndex","tail","leaf","tailLen","$elm$json$Json$Decode$map","$elm$json$Json$Decode$succeed","$elm$core$Task$succeed","$elm$core$Task$init","$elm$core$List$foldrHelper","ctr","r1","r2","r3","r4","$elm$core$List$foldr","$elm$core$List$map","$elm$core$Task$andThen","$elm$core$Task$map","taskA","$elm$core$Task$map2","taskB","$elm$core$Task$sequence","tasks","$elm$core$Platform$sendToApp","$elm$core$Task$spawnCmd","commands","millisToPosix","$elm$core$Task$command","$elm$core$Task$perform","toMessage","$elm$browser$Browser$element","$author$project$Main$MainPage","$elm$core$Platform$Cmd$none","$author$project$Main$init","T","D","$author$project$Main$GotCurrentTime","$elm$core$Basics$composeR","$elm$time$Time$Every","$elm$time$Time$State","processes","ay","aG","$elm$core$Dict$RBEmpty_elm_builtin","$elm$core$Dict$empty","$elm$time$Time$init","$elm$core$Basics$compare","$elm$core$Dict$get","targetKey","right","$elm$core$Dict$RBNode_elm_builtin","$elm$core$Dict$balance","color","_v6","lRight","rK","rV","rLeft","rRight","$elm$core$Dict$insertHelp","nColor","nKey","nValue","nLeft","nRight","$elm$core$Dict$insert","$elm$time$Time$addMySub","_v1","$elm$core$Dict$foldl","$elm$core$Dict$merge","leftStep","bothStep","rightStep","leftDict","rightDict","initialResult","_v3","rKey","rValue","stepState","_v2","lKey","lValue","rest","leftovers","intermediateResult","_v4","$elm$core$Platform$sendToSelf","$elm$time$Time$setInterval","$elm$core$Process$spawn","$elm$time$Time$spawnHelp","intervals","spawnTimer","$elm$time$Time$onEffects","subs","_v7","kills","newTaggers","existing","spawnList","existingDict","newProcesses","$elm$time$Time$now","Date","now","$elm$time$Time$onSelfMsg","time","$elm$core$Basics$composeL","$elm$time$Time$subscription","$elm$time$Time$every","$elm$time$Time$posixToMillis","$author$project$Main$EndTimeGenerated","$author$project$Main$FirstQuestionGenerated","$author$project$Main$GamePage","$author$project$Main$HiscoreEntryPage","$author$project$Main$QuestionGenerated","$author$project$Main$StartTimeGenerated","$author$project$Main$Question","first","second","operator","_","ac","ae","$elm$random$Random$Seed","$elm$random$Random$next","incr","$elm$random$Random$init","$elm$random$Random$step","seed","$elm$random$Random$onEffects","newSeed","$elm$random$Random$onSelfMsg","$elm$random$Random$map","genA","seed0","seed1","exports","$elm$random$Random$command","$elm$random$Random$generate","generator","$elm$random$Random$peel","word","$elm$random$Random$int","lo","range","threshhold","seedN","accountForBias","$elm$random$Random$map3","genB","genC","_v5","seed3","$elm$random$Random$addOne","$elm$core$Basics$abs","$elm$random$Random$float","n1","$elm$random$Random$getByWeight","others","countdown","weight","otherOthers","$elm$random$Random$weighted","normalize","total","$elm$random$Random$uniform","valueList","$author$project$Main$generateQuestion","toMsg","$author$project$Main$operatorFunction","$elm$core$List$sortBy","$author$project$Main$update","V","question","gameInfo","str","code0","charCodeAt","start","code","$elm$core$String$toInt","isEqual","pop","_Utils_eq","Q","$author$project$Main$AnswerInputChanged","$author$project$Main$HiscoreNameInputChanged","$author$project$Main$HiscoreSubmitNameButtonClicked","$author$project$Main$StartGameButtonClicked","$author$project$Main$SubmitAnswerButtonClicked","$elm$html$Html$button","$elm$json$Json$Encode$string","$elm$html$Html$Attributes$stringProperty","$elm$html$Html$Attributes$class","$elm$html$Html$div","$elm$html$Html$h1","$elm$html$Html$h2","$elm$html$Html$input","$elm$html$Html$label","$elm$html$Html$ol","$elm$virtual_dom$VirtualDom$on","$elm$html$Html$Events$on","$elm$html$Html$Events$onClick","$elm$html$Html$Events$alwaysStop","$elm$html$Html$Events$stopPropagationOn","$elm$json$Json$Decode$field","$elm$json$Json$Decode$string","$elm$html$Html$Events$targetValue","fields","$elm$html$Html$Events$onInput","$elm$html$Html$text","$elm$html$Html$Attributes$value","$elm$html$Html$li","$author$project$Main$viewHiscore","hiscore","$elm$html$Html$Attributes$attribute","test","_VirtualDom_noOnOrFormAction","_VirtualDom_noJavaScriptOrHtmlUri","$elm$core$String$fromFloat","$elm$html$Html$progress","Main","millis","questionsCompleted","$author$project$Main$main","_Platform_mergeExportsProd","obj","this","Elm","navigator","registration"],"mappings":"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","file":"static/js/main.7d9e116c.chunk.js","sourcesContent":["(function(scope){\n'use strict';\n\nfunction F(arity, fun, wrapper) {\n  wrapper.a = arity;\n  wrapper.f = fun;\n  return wrapper;\n}\n\nfunction F2(fun) {\n  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })\n}\nfunction F3(fun) {\n  return F(3, fun, function(a) {\n    return function(b) { return function(c) { return fun(a, b, c); }; };\n  });\n}\nfunction F4(fun) {\n  return F(4, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return fun(a, b, c, d); }; }; };\n  });\n}\nfunction F5(fun) {\n  return F(5, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };\n  });\n}\nfunction F6(fun) {\n  return F(6, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return fun(a, b, c, d, e, f); }; }; }; }; };\n  });\n}\nfunction F7(fun) {\n  return F(7, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };\n  });\n}\nfunction F8(fun) {\n  return F(8, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) {\n    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };\n  });\n}\nfunction F9(fun) {\n  return F(9, fun, function(a) { return function(b) { return function(c) {\n    return function(d) { return function(e) { return function(f) {\n    return function(g) { return function(h) { return function(i) {\n    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };\n  });\n}\n\nfunction A2(fun, a, b) {\n  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);\n}\nfunction A3(fun, a, b, c) {\n  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);\n}\nfunction A4(fun, a, b, c, d) {\n  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);\n}\nfunction A5(fun, a, b, c, d, e) {\n  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);\n}\nfunction A6(fun, a, b, c, d, e, f) {\n  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);\n}\nfunction A7(fun, a, b, c, d, e, f, g) {\n  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);\n}\nfunction A8(fun, a, b, c, d, e, f, g, h) {\n  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);\n}\nfunction A9(fun, a, b, c, d, e, f, g, h, i) {\n  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);\n}\n\n\n\n\n// EQUALITY\n\nfunction _Utils_eq(x, y)\n{\n\tfor (\n\t\tvar pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);\n\t\tisEqual && (pair = stack.pop());\n\t\tisEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)\n\t\t)\n\t{}\n\n\treturn isEqual;\n}\n\nfunction _Utils_eqHelp(x, y, depth, stack)\n{\n\tif (depth > 100)\n\t{\n\t\tstack.push(_Utils_Tuple2(x,y));\n\t\treturn true;\n\t}\n\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (typeof x !== 'object' || x === null || y === null)\n\t{\n\t\ttypeof x === 'function' && _Debug_crash(5);\n\t\treturn false;\n\t}\n\n\t/**_UNUSED/\n\tif (x.$ === 'Set_elm_builtin')\n\t{\n\t\tx = $elm$core$Set$toList(x);\n\t\ty = $elm$core$Set$toList(y);\n\t}\n\tif (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\t/**/\n\tif (x.$ < 0)\n\t{\n\t\tx = $elm$core$Dict$toList(x);\n\t\ty = $elm$core$Dict$toList(y);\n\t}\n\t//*/\n\n\tfor (var key in x)\n\t{\n\t\tif (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nvar _Utils_equal = F2(_Utils_eq);\nvar _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });\n\n\n\n// COMPARISONS\n\n// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on\n// the particular integer values assigned to LT, EQ, and GT.\n\nfunction _Utils_cmp(x, y, ord)\n{\n\tif (typeof x !== 'object')\n\t{\n\t\treturn x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;\n\t}\n\n\t/**_UNUSED/\n\tif (x instanceof String)\n\t{\n\t\tvar a = x.valueOf();\n\t\tvar b = y.valueOf();\n\t\treturn a === b ? 0 : a < b ? -1 : 1;\n\t}\n\t//*/\n\n\t/**/\n\tif (typeof x.$ === 'undefined')\n\t//*/\n\t/**_UNUSED/\n\tif (x.$[0] === '#')\n\t//*/\n\t{\n\t\treturn (ord = _Utils_cmp(x.a, y.a))\n\t\t\t? ord\n\t\t\t: (ord = _Utils_cmp(x.b, y.b))\n\t\t\t\t? ord\n\t\t\t\t: _Utils_cmp(x.c, y.c);\n\t}\n\n\t// traverse conses until end of a list or a mismatch\n\tfor (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES\n\treturn ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);\n}\n\nvar _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });\nvar _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });\nvar _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });\nvar _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });\n\nvar _Utils_compare = F2(function(x, y)\n{\n\tvar n = _Utils_cmp(x, y);\n\treturn n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;\n});\n\n\n// COMMON VALUES\n\nvar _Utils_Tuple0 = 0;\nvar _Utils_Tuple0_UNUSED = { $: '#0' };\n\nfunction _Utils_Tuple2(a, b) { return { a: a, b: b }; }\nfunction _Utils_Tuple2_UNUSED(a, b) { return { $: '#2', a: a, b: b }; }\n\nfunction _Utils_Tuple3(a, b, c) { return { a: a, b: b, c: c }; }\nfunction _Utils_Tuple3_UNUSED(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }\n\nfunction _Utils_chr(c) { return c; }\nfunction _Utils_chr_UNUSED(c) { return new String(c); }\n\n\n// RECORDS\n\nfunction _Utils_update(oldRecord, updatedFields)\n{\n\tvar newRecord = {};\n\n\tfor (var key in oldRecord)\n\t{\n\t\tnewRecord[key] = oldRecord[key];\n\t}\n\n\tfor (var key in updatedFields)\n\t{\n\t\tnewRecord[key] = updatedFields[key];\n\t}\n\n\treturn newRecord;\n}\n\n\n// APPEND\n\nvar _Utils_append = F2(_Utils_ap);\n\nfunction _Utils_ap(xs, ys)\n{\n\t// append Strings\n\tif (typeof xs === 'string')\n\t{\n\t\treturn xs + ys;\n\t}\n\n\t// append Lists\n\tif (!xs.b)\n\t{\n\t\treturn ys;\n\t}\n\tvar root = _List_Cons(xs.a, ys);\n\txs = xs.b\n\tfor (var curr = root; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tcurr = curr.b = _List_Cons(xs.a, ys);\n\t}\n\treturn root;\n}\n\n\n\nvar _List_Nil = { $: 0 };\nvar _List_Nil_UNUSED = { $: '[]' };\n\nfunction _List_Cons(hd, tl) { return { $: 1, a: hd, b: tl }; }\nfunction _List_Cons_UNUSED(hd, tl) { return { $: '::', a: hd, b: tl }; }\n\n\nvar _List_cons = F2(_List_Cons);\n\nfunction _List_fromArray(arr)\n{\n\tvar out = _List_Nil;\n\tfor (var i = arr.length; i--; )\n\t{\n\t\tout = _List_Cons(arr[i], out);\n\t}\n\treturn out;\n}\n\nfunction _List_toArray(xs)\n{\n\tfor (var out = []; xs.b; xs = xs.b) // WHILE_CONS\n\t{\n\t\tout.push(xs.a);\n\t}\n\treturn out;\n}\n\nvar _List_map2 = F3(function(f, xs, ys)\n{\n\tfor (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A2(f, xs.a, ys.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map3 = F4(function(f, xs, ys, zs)\n{\n\tfor (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A3(f, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map4 = F5(function(f, ws, xs, ys, zs)\n{\n\tfor (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A4(f, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_map5 = F6(function(f, vs, ws, xs, ys, zs)\n{\n\tfor (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES\n\t{\n\t\tarr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));\n\t}\n\treturn _List_fromArray(arr);\n});\n\nvar _List_sortBy = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\treturn _Utils_cmp(f(a), f(b));\n\t}));\n});\n\nvar _List_sortWith = F2(function(f, xs)\n{\n\treturn _List_fromArray(_List_toArray(xs).sort(function(a, b) {\n\t\tvar ord = A2(f, a, b);\n\t\treturn ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;\n\t}));\n});\n\n\n\nvar _JsArray_empty = [];\n\nfunction _JsArray_singleton(value)\n{\n    return [value];\n}\n\nfunction _JsArray_length(array)\n{\n    return array.length;\n}\n\nvar _JsArray_initialize = F3(function(size, offset, func)\n{\n    var result = new Array(size);\n\n    for (var i = 0; i < size; i++)\n    {\n        result[i] = func(offset + i);\n    }\n\n    return result;\n});\n\nvar _JsArray_initializeFromList = F2(function (max, ls)\n{\n    var result = new Array(max);\n\n    for (var i = 0; i < max && ls.b; i++)\n    {\n        result[i] = ls.a;\n        ls = ls.b;\n    }\n\n    result.length = i;\n    return _Utils_Tuple2(result, ls);\n});\n\nvar _JsArray_unsafeGet = F2(function(index, array)\n{\n    return array[index];\n});\n\nvar _JsArray_unsafeSet = F3(function(index, value, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[index] = value;\n    return result;\n});\n\nvar _JsArray_push = F2(function(value, array)\n{\n    var length = array.length;\n    var result = new Array(length + 1);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = array[i];\n    }\n\n    result[length] = value;\n    return result;\n});\n\nvar _JsArray_foldl = F3(function(func, acc, array)\n{\n    var length = array.length;\n\n    for (var i = 0; i < length; i++)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_foldr = F3(function(func, acc, array)\n{\n    for (var i = array.length - 1; i >= 0; i--)\n    {\n        acc = A2(func, array[i], acc);\n    }\n\n    return acc;\n});\n\nvar _JsArray_map = F2(function(func, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = func(array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_indexedMap = F3(function(func, offset, array)\n{\n    var length = array.length;\n    var result = new Array(length);\n\n    for (var i = 0; i < length; i++)\n    {\n        result[i] = A2(func, offset + i, array[i]);\n    }\n\n    return result;\n});\n\nvar _JsArray_slice = F3(function(from, to, array)\n{\n    return array.slice(from, to);\n});\n\nvar _JsArray_appendN = F3(function(n, dest, source)\n{\n    var destLen = dest.length;\n    var itemsToCopy = n - destLen;\n\n    if (itemsToCopy > source.length)\n    {\n        itemsToCopy = source.length;\n    }\n\n    var size = destLen + itemsToCopy;\n    var result = new Array(size);\n\n    for (var i = 0; i < destLen; i++)\n    {\n        result[i] = dest[i];\n    }\n\n    for (var i = 0; i < itemsToCopy; i++)\n    {\n        result[i + destLen] = source[i];\n    }\n\n    return result;\n});\n\n\n\n// LOG\n\nvar _Debug_log = F2(function(tag, value)\n{\n\treturn value;\n});\n\nvar _Debug_log_UNUSED = F2(function(tag, value)\n{\n\tconsole.log(tag + ': ' + _Debug_toString(value));\n\treturn value;\n});\n\n\n// TODOS\n\nfunction _Debug_todo(moduleName, region)\n{\n\treturn function(message) {\n\t\t_Debug_crash(8, moduleName, region, message);\n\t};\n}\n\nfunction _Debug_todoCase(moduleName, region, value)\n{\n\treturn function(message) {\n\t\t_Debug_crash(9, moduleName, region, value, message);\n\t};\n}\n\n\n// TO STRING\n\nfunction _Debug_toString(value)\n{\n\treturn '<internals>';\n}\n\nfunction _Debug_toString_UNUSED(value)\n{\n\treturn _Debug_toAnsiString(false, value);\n}\n\nfunction _Debug_toAnsiString(ansi, value)\n{\n\tif (typeof value === 'function')\n\t{\n\t\treturn _Debug_internalColor(ansi, '<function>');\n\t}\n\n\tif (typeof value === 'boolean')\n\t{\n\t\treturn _Debug_ctorColor(ansi, value ? 'True' : 'False');\n\t}\n\n\tif (typeof value === 'number')\n\t{\n\t\treturn _Debug_numberColor(ansi, value + '');\n\t}\n\n\tif (value instanceof String)\n\t{\n\t\treturn _Debug_charColor(ansi, \"'\" + _Debug_addSlashes(value, true) + \"'\");\n\t}\n\n\tif (typeof value === 'string')\n\t{\n\t\treturn _Debug_stringColor(ansi, '\"' + _Debug_addSlashes(value, false) + '\"');\n\t}\n\n\tif (typeof value === 'object' && '$' in value)\n\t{\n\t\tvar tag = value.$;\n\n\t\tif (typeof tag === 'number')\n\t\t{\n\t\t\treturn _Debug_internalColor(ansi, '<internals>');\n\t\t}\n\n\t\tif (tag[0] === '#')\n\t\t{\n\t\t\tvar output = [];\n\t\t\tfor (var k in value)\n\t\t\t{\n\t\t\t\tif (k === '$') continue;\n\t\t\t\toutput.push(_Debug_toAnsiString(ansi, value[k]));\n\t\t\t}\n\t\t\treturn '(' + output.join(',') + ')';\n\t\t}\n\n\t\tif (tag === 'Set_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Set')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));\n\t\t}\n\n\t\tif (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Dict')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));\n\t\t}\n\n\t\tif (tag === 'Array_elm_builtin')\n\t\t{\n\t\t\treturn _Debug_ctorColor(ansi, 'Array')\n\t\t\t\t+ _Debug_fadeColor(ansi, '.fromList') + ' '\n\t\t\t\t+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));\n\t\t}\n\n\t\tif (tag === '::' || tag === '[]')\n\t\t{\n\t\t\tvar output = '[';\n\n\t\t\tvalue.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)\n\n\t\t\tfor (; value.b; value = value.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\toutput += ',' + _Debug_toAnsiString(ansi, value.a);\n\t\t\t}\n\t\t\treturn output + ']';\n\t\t}\n\n\t\tvar output = '';\n\t\tfor (var i in value)\n\t\t{\n\t\t\tif (i === '$') continue;\n\t\t\tvar str = _Debug_toAnsiString(ansi, value[i]);\n\t\t\tvar c0 = str[0];\n\t\t\tvar parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '\"' || str.indexOf(' ') < 0;\n\t\t\toutput += ' ' + (parenless ? str : '(' + str + ')');\n\t\t}\n\t\treturn _Debug_ctorColor(ansi, tag) + output;\n\t}\n\n\tif (typeof DataView === 'function' && value instanceof DataView)\n\t{\n\t\treturn _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');\n\t}\n\n\tif (typeof File === 'function' && value instanceof File)\n\t{\n\t\treturn _Debug_internalColor(ansi, '<' + value.name + '>');\n\t}\n\n\tif (typeof value === 'object')\n\t{\n\t\tvar output = [];\n\t\tfor (var key in value)\n\t\t{\n\t\t\tvar field = key[0] === '_' ? key.slice(1) : key;\n\t\t\toutput.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));\n\t\t}\n\t\tif (output.length === 0)\n\t\t{\n\t\t\treturn '{}';\n\t\t}\n\t\treturn '{ ' + output.join(', ') + ' }';\n\t}\n\n\treturn _Debug_internalColor(ansi, '<internals>');\n}\n\nfunction _Debug_addSlashes(str, isChar)\n{\n\tvar s = str\n\t\t.replace(/\\\\/g, '\\\\\\\\')\n\t\t.replace(/\\n/g, '\\\\n')\n\t\t.replace(/\\t/g, '\\\\t')\n\t\t.replace(/\\r/g, '\\\\r')\n\t\t.replace(/\\v/g, '\\\\v')\n\t\t.replace(/\\0/g, '\\\\0');\n\n\tif (isChar)\n\t{\n\t\treturn s.replace(/\\'/g, '\\\\\\'');\n\t}\n\telse\n\t{\n\t\treturn s.replace(/\\\"/g, '\\\\\"');\n\t}\n}\n\nfunction _Debug_ctorColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[96m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_numberColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[95m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_stringColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[93m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_charColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[92m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_fadeColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[37m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_internalColor(ansi, string)\n{\n\treturn ansi ? '\\x1b[94m' + string + '\\x1b[0m' : string;\n}\n\nfunction _Debug_toHexDigit(n)\n{\n\treturn String.fromCharCode(n < 10 ? 48 + n : 55 + n);\n}\n\n\n// CRASH\n\n\nfunction _Debug_crash(identifier)\n{\n\tthrow new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');\n}\n\n\nfunction _Debug_crash_UNUSED(identifier, fact1, fact2, fact3, fact4)\n{\n\tswitch(identifier)\n\t{\n\t\tcase 0:\n\t\t\tthrow new Error('What node should I take over? In JavaScript I need something like:\\n\\n    Elm.Main.init({\\n        node: document.getElementById(\"elm-node\")\\n    })\\n\\nYou need to do this with any Browser.sandbox or Browser.element program.');\n\n\t\tcase 1:\n\t\t\tthrow new Error('Browser.application programs cannot handle URLs like this:\\n\\n    ' + document.location.href + '\\n\\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');\n\n\t\tcase 2:\n\t\t\tvar jsonErrorString = fact1;\n\t\t\tthrow new Error('Problem with the flags given to your Elm program on initialization.\\n\\n' + jsonErrorString);\n\n\t\tcase 3:\n\t\t\tvar portName = fact1;\n\t\t\tthrow new Error('There can only be one port named `' + portName + '`, but your program has multiple.');\n\n\t\tcase 4:\n\t\t\tvar portName = fact1;\n\t\t\tvar problem = fact2;\n\t\t\tthrow new Error('Trying to send an unexpected type of value through port `' + portName + '`:\\n' + problem);\n\n\t\tcase 5:\n\t\t\tthrow new Error('Trying to use `(==)` on functions.\\nThere is no way to know if functions are \"the same\" in the Elm sense.\\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');\n\n\t\tcase 6:\n\t\t\tvar moduleName = fact1;\n\t\t\tthrow new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');\n\n\t\tcase 8:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar message = fact3;\n\t\t\tthrow new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\\n\\n' + message);\n\n\t\tcase 9:\n\t\t\tvar moduleName = fact1;\n\t\t\tvar region = fact2;\n\t\t\tvar value = fact3;\n\t\t\tvar message = fact4;\n\t\t\tthrow new Error(\n\t\t\t\t'TODO in module `' + moduleName + '` from the `case` expression '\n\t\t\t\t+ _Debug_regionToString(region) + '\\n\\nIt received the following value:\\n\\n    '\n\t\t\t\t+ _Debug_toString(value).replace('\\n', '\\n    ')\n\t\t\t\t+ '\\n\\nBut the branch that handles it says:\\n\\n    ' + message.replace('\\n', '\\n    ')\n\t\t\t);\n\n\t\tcase 10:\n\t\t\tthrow new Error('Bug in https://github.com/elm/virtual-dom/issues');\n\n\t\tcase 11:\n\t\t\tthrow new Error('Cannot perform mod 0. Division by zero error.');\n\t}\n}\n\nfunction _Debug_regionToString(region)\n{\n\tif (region.ag.L === region.al.L)\n\t{\n\t\treturn 'on line ' + region.ag.L;\n\t}\n\treturn 'on lines ' + region.ag.L + ' through ' + region.al.L;\n}\n\n\n\n// MATH\n\nvar _Basics_add = F2(function(a, b) { return a + b; });\nvar _Basics_sub = F2(function(a, b) { return a - b; });\nvar _Basics_mul = F2(function(a, b) { return a * b; });\nvar _Basics_fdiv = F2(function(a, b) { return a / b; });\nvar _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });\nvar _Basics_pow = F2(Math.pow);\n\nvar _Basics_remainderBy = F2(function(b, a) { return a % b; });\n\n// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\nvar _Basics_modBy = F2(function(modulus, x)\n{\n\tvar answer = x % modulus;\n\treturn modulus === 0\n\t\t? _Debug_crash(11)\n\t\t:\n\t((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))\n\t\t? answer + modulus\n\t\t: answer;\n});\n\n\n// TRIGONOMETRY\n\nvar _Basics_pi = Math.PI;\nvar _Basics_e = Math.E;\nvar _Basics_cos = Math.cos;\nvar _Basics_sin = Math.sin;\nvar _Basics_tan = Math.tan;\nvar _Basics_acos = Math.acos;\nvar _Basics_asin = Math.asin;\nvar _Basics_atan = Math.atan;\nvar _Basics_atan2 = F2(Math.atan2);\n\n\n// MORE MATH\n\nfunction _Basics_toFloat(x) { return x; }\nfunction _Basics_truncate(n) { return n | 0; }\nfunction _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }\n\nvar _Basics_ceiling = Math.ceil;\nvar _Basics_floor = Math.floor;\nvar _Basics_round = Math.round;\nvar _Basics_sqrt = Math.sqrt;\nvar _Basics_log = Math.log;\nvar _Basics_isNaN = isNaN;\n\n\n// BOOLEANS\n\nfunction _Basics_not(bool) { return !bool; }\nvar _Basics_and = F2(function(a, b) { return a && b; });\nvar _Basics_or  = F2(function(a, b) { return a || b; });\nvar _Basics_xor = F2(function(a, b) { return a !== b; });\n\n\n\nvar _String_cons = F2(function(chr, str)\n{\n\treturn chr + str;\n});\n\nfunction _String_uncons(string)\n{\n\tvar word = string.charCodeAt(0);\n\treturn word\n\t\t? $elm$core$Maybe$Just(\n\t\t\t0xD800 <= word && word <= 0xDBFF\n\t\t\t\t? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))\n\t\t\t\t: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))\n\t\t)\n\t\t: $elm$core$Maybe$Nothing;\n}\n\nvar _String_append = F2(function(a, b)\n{\n\treturn a + b;\n});\n\nfunction _String_length(str)\n{\n\treturn str.length;\n}\n\nvar _String_map = F2(function(func, string)\n{\n\tvar len = string.length;\n\tvar array = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarray[i] = func(_Utils_chr(string[i] + string[i+1]));\n\t\t\ti += 2;\n\t\t\tcontinue;\n\t\t}\n\t\tarray[i] = func(_Utils_chr(string[i]));\n\t\ti++;\n\t}\n\treturn array.join('');\n});\n\nvar _String_filter = F2(function(isGood, str)\n{\n\tvar arr = [];\n\tvar len = str.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = str[i];\n\t\tvar word = str.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += str[i];\n\t\t\ti++;\n\t\t}\n\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\tarr.push(char);\n\t\t}\n\t}\n\treturn arr.join('');\n});\n\nfunction _String_reverse(str)\n{\n\tvar len = str.length;\n\tvar arr = new Array(len);\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar word = str.charCodeAt(i);\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tarr[len - i] = str[i + 1];\n\t\t\ti++;\n\t\t\tarr[len - i] = str[i - 1];\n\t\t\ti++;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tarr[len - i] = str[i];\n\t\t\ti++;\n\t\t}\n\t}\n\treturn arr.join('');\n}\n\nvar _String_foldl = F3(function(func, state, string)\n{\n\tvar len = string.length;\n\tvar i = 0;\n\twhile (i < len)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\ti++;\n\t\tif (0xD800 <= word && word <= 0xDBFF)\n\t\t{\n\t\t\tchar += string[i];\n\t\t\ti++;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_foldr = F3(function(func, state, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tstate = A2(func, _Utils_chr(char), state);\n\t}\n\treturn state;\n});\n\nvar _String_split = F2(function(sep, str)\n{\n\treturn str.split(sep);\n});\n\nvar _String_join = F2(function(sep, strs)\n{\n\treturn strs.join(sep);\n});\n\nvar _String_slice = F3(function(start, end, str) {\n\treturn str.slice(start, end);\n});\n\nfunction _String_trim(str)\n{\n\treturn str.trim();\n}\n\nfunction _String_trimLeft(str)\n{\n\treturn str.replace(/^\\s+/, '');\n}\n\nfunction _String_trimRight(str)\n{\n\treturn str.replace(/\\s+$/, '');\n}\n\nfunction _String_words(str)\n{\n\treturn _List_fromArray(str.trim().split(/\\s+/g));\n}\n\nfunction _String_lines(str)\n{\n\treturn _List_fromArray(str.split(/\\r\\n|\\r|\\n/g));\n}\n\nfunction _String_toUpper(str)\n{\n\treturn str.toUpperCase();\n}\n\nfunction _String_toLower(str)\n{\n\treturn str.toLowerCase();\n}\n\nvar _String_any = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});\n\nvar _String_all = F2(function(isGood, string)\n{\n\tvar i = string.length;\n\twhile (i--)\n\t{\n\t\tvar char = string[i];\n\t\tvar word = string.charCodeAt(i);\n\t\tif (0xDC00 <= word && word <= 0xDFFF)\n\t\t{\n\t\t\ti--;\n\t\t\tchar = string[i] + char;\n\t\t}\n\t\tif (!isGood(_Utils_chr(char)))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n});\n\nvar _String_contains = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) > -1;\n});\n\nvar _String_startsWith = F2(function(sub, str)\n{\n\treturn str.indexOf(sub) === 0;\n});\n\nvar _String_endsWith = F2(function(sub, str)\n{\n\treturn str.length >= sub.length &&\n\t\tstr.lastIndexOf(sub) === str.length - sub.length;\n});\n\nvar _String_indexes = F2(function(sub, str)\n{\n\tvar subLen = sub.length;\n\n\tif (subLen < 1)\n\t{\n\t\treturn _List_Nil;\n\t}\n\n\tvar i = 0;\n\tvar is = [];\n\n\twhile ((i = str.indexOf(sub, i)) > -1)\n\t{\n\t\tis.push(i);\n\t\ti = i + subLen;\n\t}\n\n\treturn _List_fromArray(is);\n});\n\n\n// TO STRING\n\nfunction _String_fromNumber(number)\n{\n\treturn number + '';\n}\n\n\n// INT CONVERSIONS\n\nfunction _String_toInt(str)\n{\n\tvar total = 0;\n\tvar code0 = str.charCodeAt(0);\n\tvar start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;\n\n\tfor (var i = start; i < str.length; ++i)\n\t{\n\t\tvar code = str.charCodeAt(i);\n\t\tif (code < 0x30 || 0x39 < code)\n\t\t{\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t}\n\t\ttotal = 10 * total + code - 0x30;\n\t}\n\n\treturn i == start\n\t\t? $elm$core$Maybe$Nothing\n\t\t: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);\n}\n\n\n// FLOAT CONVERSIONS\n\nfunction _String_toFloat(s)\n{\n\t// check if it is a hex, octal, or binary number\n\tif (s.length === 0 || /[\\sxbo]/.test(s))\n\t{\n\t\treturn $elm$core$Maybe$Nothing;\n\t}\n\tvar n = +s;\n\t// faster isNaN check\n\treturn n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;\n}\n\nfunction _String_fromList(chars)\n{\n\treturn _List_toArray(chars).join('');\n}\n\n\n\n\nfunction _Char_toCode(char)\n{\n\tvar code = char.charCodeAt(0);\n\tif (0xD800 <= code && code <= 0xDBFF)\n\t{\n\t\treturn (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000\n\t}\n\treturn code;\n}\n\nfunction _Char_fromCode(code)\n{\n\treturn _Utils_chr(\n\t\t(code < 0 || 0x10FFFF < code)\n\t\t\t? '\\uFFFD'\n\t\t\t:\n\t\t(code <= 0xFFFF)\n\t\t\t? String.fromCharCode(code)\n\t\t\t:\n\t\t(code -= 0x10000,\n\t\t\tString.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)\n\t\t)\n\t);\n}\n\nfunction _Char_toUpper(char)\n{\n\treturn _Utils_chr(char.toUpperCase());\n}\n\nfunction _Char_toLower(char)\n{\n\treturn _Utils_chr(char.toLowerCase());\n}\n\nfunction _Char_toLocaleUpper(char)\n{\n\treturn _Utils_chr(char.toLocaleUpperCase());\n}\n\nfunction _Char_toLocaleLower(char)\n{\n\treturn _Utils_chr(char.toLocaleLowerCase());\n}\n\n\n\n/**_UNUSED/\nfunction _Json_errorToString(error)\n{\n\treturn $elm$json$Json$Decode$errorToString(error);\n}\n//*/\n\n\n// CORE DECODERS\n\nfunction _Json_succeed(msg)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_fail(msg)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: msg\n\t};\n}\n\nfunction _Json_decodePrim(decoder)\n{\n\treturn { $: 2, b: decoder };\n}\n\nvar _Json_decodeInt = _Json_decodePrim(function(value) {\n\treturn (typeof value !== 'number')\n\t\t? _Json_expecting('an INT', value)\n\t\t:\n\t(-2147483647 < value && value < 2147483647 && (value | 0) === value)\n\t\t? $elm$core$Result$Ok(value)\n\t\t:\n\t(isFinite(value) && !(value % 1))\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('an INT', value);\n});\n\nvar _Json_decodeBool = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'boolean')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a BOOL', value);\n});\n\nvar _Json_decodeFloat = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'number')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: _Json_expecting('a FLOAT', value);\n});\n\nvar _Json_decodeValue = _Json_decodePrim(function(value) {\n\treturn $elm$core$Result$Ok(_Json_wrap(value));\n});\n\nvar _Json_decodeString = _Json_decodePrim(function(value) {\n\treturn (typeof value === 'string')\n\t\t? $elm$core$Result$Ok(value)\n\t\t: (value instanceof String)\n\t\t\t? $elm$core$Result$Ok(value + '')\n\t\t\t: _Json_expecting('a STRING', value);\n});\n\nfunction _Json_decodeList(decoder) { return { $: 3, b: decoder }; }\nfunction _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }\n\nfunction _Json_decodeNull(value) { return { $: 5, c: value }; }\n\nvar _Json_decodeField = F2(function(field, decoder)\n{\n\treturn {\n\t\t$: 6,\n\t\td: field,\n\t\tb: decoder\n\t};\n});\n\nvar _Json_decodeIndex = F2(function(index, decoder)\n{\n\treturn {\n\t\t$: 7,\n\t\te: index,\n\t\tb: decoder\n\t};\n});\n\nfunction _Json_decodeKeyValuePairs(decoder)\n{\n\treturn {\n\t\t$: 8,\n\t\tb: decoder\n\t};\n}\n\nfunction _Json_mapMany(f, decoders)\n{\n\treturn {\n\t\t$: 9,\n\t\tf: f,\n\t\tg: decoders\n\t};\n}\n\nvar _Json_andThen = F2(function(callback, decoder)\n{\n\treturn {\n\t\t$: 10,\n\t\tb: decoder,\n\t\th: callback\n\t};\n});\n\nfunction _Json_oneOf(decoders)\n{\n\treturn {\n\t\t$: 11,\n\t\tg: decoders\n\t};\n}\n\n\n// DECODING OBJECTS\n\nvar _Json_map1 = F2(function(f, d1)\n{\n\treturn _Json_mapMany(f, [d1]);\n});\n\nvar _Json_map2 = F3(function(f, d1, d2)\n{\n\treturn _Json_mapMany(f, [d1, d2]);\n});\n\nvar _Json_map3 = F4(function(f, d1, d2, d3)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3]);\n});\n\nvar _Json_map4 = F5(function(f, d1, d2, d3, d4)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4]);\n});\n\nvar _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5]);\n});\n\nvar _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);\n});\n\nvar _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);\n});\n\nvar _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)\n{\n\treturn _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);\n});\n\n\n// DECODE\n\nvar _Json_runOnString = F2(function(decoder, string)\n{\n\ttry\n\t{\n\t\tvar value = JSON.parse(string);\n\t\treturn _Json_runHelp(decoder, value);\n\t}\n\tcatch (e)\n\t{\n\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));\n\t}\n});\n\nvar _Json_run = F2(function(decoder, value)\n{\n\treturn _Json_runHelp(decoder, _Json_unwrap(value));\n});\n\nfunction _Json_runHelp(decoder, value)\n{\n\tswitch (decoder.$)\n\t{\n\t\tcase 2:\n\t\t\treturn decoder.b(value);\n\n\t\tcase 5:\n\t\t\treturn (value === null)\n\t\t\t\t? $elm$core$Result$Ok(decoder.c)\n\t\t\t\t: _Json_expecting('null', value);\n\n\t\tcase 3:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LIST', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _List_fromArray);\n\n\t\tcase 4:\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\treturn _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);\n\n\t\tcase 6:\n\t\t\tvar field = decoder.d;\n\t\t\tif (typeof value !== 'object' || value === null || !(field in value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT with a field named `' + field + '`', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[field]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));\n\n\t\tcase 7:\n\t\t\tvar index = decoder.e;\n\t\t\tif (!_Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an ARRAY', value);\n\t\t\t}\n\t\t\tif (index >= value.length)\n\t\t\t{\n\t\t\t\treturn _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);\n\t\t\t}\n\t\t\tvar result = _Json_runHelp(decoder.b, value[index]);\n\t\t\treturn ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));\n\n\t\tcase 8:\n\t\t\tif (typeof value !== 'object' || value === null || _Json_isArray(value))\n\t\t\t{\n\t\t\t\treturn _Json_expecting('an OBJECT', value);\n\t\t\t}\n\n\t\t\tvar keyValuePairs = _List_Nil;\n\t\t\t// TODO test perf of Object.keys and switch when support is good enough\n\t\t\tfor (var key in value)\n\t\t\t{\n\t\t\t\tif (value.hasOwnProperty(key))\n\t\t\t\t{\n\t\t\t\t\tvar result = _Json_runHelp(decoder.b, value[key]);\n\t\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t\t{\n\t\t\t\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));\n\t\t\t\t\t}\n\t\t\t\t\tkeyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));\n\n\t\tcase 9:\n\t\t\tvar answer = decoder.f;\n\t\t\tvar decoders = decoder.g;\n\t\t\tfor (var i = 0; i < decoders.length; i++)\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(decoders[i], value);\n\t\t\t\tif (!$elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\tanswer = answer(result.a);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Ok(answer);\n\n\t\tcase 10:\n\t\t\tvar result = _Json_runHelp(decoder.b, value);\n\t\t\treturn (!$elm$core$Result$isOk(result))\n\t\t\t\t? result\n\t\t\t\t: _Json_runHelp(decoder.h(result.a), value);\n\n\t\tcase 11:\n\t\t\tvar errors = _List_Nil;\n\t\t\tfor (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\tvar result = _Json_runHelp(temp.a, value);\n\t\t\t\tif ($elm$core$Result$isOk(result))\n\t\t\t\t{\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\terrors = _List_Cons(result.a, errors);\n\t\t\t}\n\t\t\treturn $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));\n\n\t\tcase 1:\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));\n\n\t\tcase 0:\n\t\t\treturn $elm$core$Result$Ok(decoder.a);\n\t}\n}\n\nfunction _Json_runArrayDecoder(decoder, value, toElmValue)\n{\n\tvar len = value.length;\n\tvar array = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tvar result = _Json_runHelp(decoder, value[i]);\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));\n\t\t}\n\t\tarray[i] = result.a;\n\t}\n\treturn $elm$core$Result$Ok(toElmValue(array));\n}\n\nfunction _Json_isArray(value)\n{\n\treturn Array.isArray(value) || (typeof FileList === 'function' && value instanceof FileList);\n}\n\nfunction _Json_toElmArray(array)\n{\n\treturn A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });\n}\n\nfunction _Json_expecting(type, value)\n{\n\treturn $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));\n}\n\n\n// EQUALITY\n\nfunction _Json_equality(x, y)\n{\n\tif (x === y)\n\t{\n\t\treturn true;\n\t}\n\n\tif (x.$ !== y.$)\n\t{\n\t\treturn false;\n\t}\n\n\tswitch (x.$)\n\t{\n\t\tcase 0:\n\t\tcase 1:\n\t\t\treturn x.a === y.a;\n\n\t\tcase 2:\n\t\t\treturn x.b === y.b;\n\n\t\tcase 5:\n\t\t\treturn x.c === y.c;\n\n\t\tcase 3:\n\t\tcase 4:\n\t\tcase 8:\n\t\t\treturn _Json_equality(x.b, y.b);\n\n\t\tcase 6:\n\t\t\treturn x.d === y.d && _Json_equality(x.b, y.b);\n\n\t\tcase 7:\n\t\t\treturn x.e === y.e && _Json_equality(x.b, y.b);\n\n\t\tcase 9:\n\t\t\treturn x.f === y.f && _Json_listEquality(x.g, y.g);\n\n\t\tcase 10:\n\t\t\treturn x.h === y.h && _Json_equality(x.b, y.b);\n\n\t\tcase 11:\n\t\t\treturn _Json_listEquality(x.g, y.g);\n\t}\n}\n\nfunction _Json_listEquality(aDecoders, bDecoders)\n{\n\tvar len = aDecoders.length;\n\tif (len !== bDecoders.length)\n\t{\n\t\treturn false;\n\t}\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tif (!_Json_equality(aDecoders[i], bDecoders[i]))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n// ENCODE\n\nvar _Json_encode = F2(function(indentLevel, value)\n{\n\treturn JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';\n});\n\nfunction _Json_wrap_UNUSED(value) { return { $: 0, a: value }; }\nfunction _Json_unwrap_UNUSED(value) { return value.a; }\n\nfunction _Json_wrap(value) { return value; }\nfunction _Json_unwrap(value) { return value; }\n\nfunction _Json_emptyArray() { return []; }\nfunction _Json_emptyObject() { return {}; }\n\nvar _Json_addField = F3(function(key, value, object)\n{\n\tobject[key] = _Json_unwrap(value);\n\treturn object;\n});\n\nfunction _Json_addEntry(func)\n{\n\treturn F2(function(entry, array)\n\t{\n\t\tarray.push(_Json_unwrap(func(entry)));\n\t\treturn array;\n\t});\n}\n\nvar _Json_encodeNull = _Json_wrap(null);\n\n\n\n// TASKS\n\nfunction _Scheduler_succeed(value)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: value\n\t};\n}\n\nfunction _Scheduler_fail(error)\n{\n\treturn {\n\t\t$: 1,\n\t\ta: error\n\t};\n}\n\nfunction _Scheduler_binding(callback)\n{\n\treturn {\n\t\t$: 2,\n\t\tb: callback,\n\t\tc: null\n\t};\n}\n\nvar _Scheduler_andThen = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 3,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nvar _Scheduler_onError = F2(function(callback, task)\n{\n\treturn {\n\t\t$: 4,\n\t\tb: callback,\n\t\td: task\n\t};\n});\n\nfunction _Scheduler_receive(callback)\n{\n\treturn {\n\t\t$: 5,\n\t\tb: callback\n\t};\n}\n\n\n// PROCESSES\n\nvar _Scheduler_guid = 0;\n\nfunction _Scheduler_rawSpawn(task)\n{\n\tvar proc = {\n\t\t$: 0,\n\t\te: _Scheduler_guid++,\n\t\tf: task,\n\t\tg: null,\n\t\th: []\n\t};\n\n\t_Scheduler_enqueue(proc);\n\n\treturn proc;\n}\n\nfunction _Scheduler_spawn(task)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tcallback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));\n\t});\n}\n\nfunction _Scheduler_rawSend(proc, msg)\n{\n\tproc.h.push(msg);\n\t_Scheduler_enqueue(proc);\n}\n\nvar _Scheduler_send = F2(function(proc, msg)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\t_Scheduler_rawSend(proc, msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\nfunction _Scheduler_kill(proc)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar task = proc.f;\n\t\tif (task.$ === 2 && task.c)\n\t\t{\n\t\t\ttask.c();\n\t\t}\n\n\t\tproc.f = null;\n\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n}\n\n\n/* STEP PROCESSES\n\ntype alias Process =\n  { $ : tag\n  , id : unique_id\n  , root : Task\n  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }\n  , mailbox : [msg]\n  }\n\n*/\n\n\nvar _Scheduler_working = false;\nvar _Scheduler_queue = [];\n\n\nfunction _Scheduler_enqueue(proc)\n{\n\t_Scheduler_queue.push(proc);\n\tif (_Scheduler_working)\n\t{\n\t\treturn;\n\t}\n\t_Scheduler_working = true;\n\twhile (proc = _Scheduler_queue.shift())\n\t{\n\t\t_Scheduler_step(proc);\n\t}\n\t_Scheduler_working = false;\n}\n\n\nfunction _Scheduler_step(proc)\n{\n\twhile (proc.f)\n\t{\n\t\tvar rootTag = proc.f.$;\n\t\tif (rootTag === 0 || rootTag === 1)\n\t\t{\n\t\t\twhile (proc.g && proc.g.$ !== rootTag)\n\t\t\t{\n\t\t\t\tproc.g = proc.g.i;\n\t\t\t}\n\t\t\tif (!proc.g)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.g.b(proc.f.a);\n\t\t\tproc.g = proc.g.i;\n\t\t}\n\t\telse if (rootTag === 2)\n\t\t{\n\t\t\tproc.f.c = proc.f.b(function(newRoot) {\n\t\t\t\tproc.f = newRoot;\n\t\t\t\t_Scheduler_enqueue(proc);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\telse if (rootTag === 5)\n\t\t{\n\t\t\tif (proc.h.length === 0)\n\t\t\t{\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproc.f = proc.f.b(proc.h.shift());\n\t\t}\n\t\telse // if (rootTag === 3 || rootTag === 4)\n\t\t{\n\t\t\tproc.g = {\n\t\t\t\t$: rootTag === 3 ? 0 : 1,\n\t\t\t\tb: proc.f.b,\n\t\t\t\ti: proc.g\n\t\t\t};\n\t\t\tproc.f = proc.f.d;\n\t\t}\n\t}\n}\n\n\n\nfunction _Process_sleep(time)\n{\n\treturn _Scheduler_binding(function(callback) {\n\t\tvar id = setTimeout(function() {\n\t\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t\t}, time);\n\n\t\treturn function() { clearTimeout(id); };\n\t});\n}\n\n\n\n\n// PROGRAMS\n\n\nvar _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aT,\n\t\timpl.a$,\n\t\timpl.aZ,\n\t\tfunction() { return function() {} }\n\t);\n});\n\n\n\n// INITIALIZE A PROGRAM\n\n\nfunction _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)\n{\n\tvar result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));\n\t$elm$core$Result$isOk(result) || _Debug_crash(2 /**_UNUSED/, _Json_errorToString(result.a) /**/);\n\tvar managers = {};\n\tresult = init(result.a);\n\tvar model = result.a;\n\tvar stepper = stepperBuilder(sendToApp, model);\n\tvar ports = _Platform_setupEffects(managers, sendToApp);\n\n\tfunction sendToApp(msg, viewMetadata)\n\t{\n\t\tresult = A2(update, msg, model);\n\t\tstepper(model = result.a, viewMetadata);\n\t\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\t}\n\n\t_Platform_dispatchEffects(managers, result.b, subscriptions(model));\n\n\treturn ports ? { ports: ports } : {};\n}\n\n\n\n// TRACK PRELOADS\n//\n// This is used by code in elm/browser and elm/http\n// to register any HTTP requests that are triggered by init.\n//\n\n\nvar _Platform_preload;\n\n\nfunction _Platform_registerPreload(url)\n{\n\t_Platform_preload.add(url);\n}\n\n\n\n// EFFECT MANAGERS\n\n\nvar _Platform_effectManagers = {};\n\n\nfunction _Platform_setupEffects(managers, sendToApp)\n{\n\tvar ports;\n\n\t// setup all necessary effect managers\n\tfor (var key in _Platform_effectManagers)\n\t{\n\t\tvar manager = _Platform_effectManagers[key];\n\n\t\tif (manager.a)\n\t\t{\n\t\t\tports = ports || {};\n\t\t\tports[key] = manager.a(key, sendToApp);\n\t\t}\n\n\t\tmanagers[key] = _Platform_instantiateManager(manager, sendToApp);\n\t}\n\n\treturn ports;\n}\n\n\nfunction _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)\n{\n\treturn {\n\t\tb: init,\n\t\tc: onEffects,\n\t\td: onSelfMsg,\n\t\te: cmdMap,\n\t\tf: subMap\n\t};\n}\n\n\nfunction _Platform_instantiateManager(info, sendToApp)\n{\n\tvar router = {\n\t\tg: sendToApp,\n\t\th: undefined\n\t};\n\n\tvar onEffects = info.c;\n\tvar onSelfMsg = info.d;\n\tvar cmdMap = info.e;\n\tvar subMap = info.f;\n\n\tfunction loop(state)\n\t{\n\t\treturn A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)\n\t\t{\n\t\t\tvar value = msg.a;\n\n\t\t\tif (msg.$ === 0)\n\t\t\t{\n\t\t\t\treturn A3(onSelfMsg, router, value, state);\n\t\t\t}\n\n\t\t\treturn cmdMap && subMap\n\t\t\t\t? A4(onEffects, router, value.i, value.j, state)\n\t\t\t\t: A3(onEffects, router, cmdMap ? value.i : value.j, state);\n\t\t}));\n\t}\n\n\treturn router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));\n}\n\n\n\n// ROUTING\n\n\nvar _Platform_sendToApp = F2(function(router, msg)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\trouter.g(msg);\n\t\tcallback(_Scheduler_succeed(_Utils_Tuple0));\n\t});\n});\n\n\nvar _Platform_sendToSelf = F2(function(router, msg)\n{\n\treturn A2(_Scheduler_send, router.h, {\n\t\t$: 0,\n\t\ta: msg\n\t});\n});\n\n\n\n// BAGS\n\n\nfunction _Platform_leaf(home)\n{\n\treturn function(value)\n\t{\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tk: home,\n\t\t\tl: value\n\t\t};\n\t};\n}\n\n\nfunction _Platform_batch(list)\n{\n\treturn {\n\t\t$: 2,\n\t\tm: list\n\t};\n}\n\n\nvar _Platform_map = F2(function(tagger, bag)\n{\n\treturn {\n\t\t$: 3,\n\t\tn: tagger,\n\t\to: bag\n\t}\n});\n\n\n\n// PIPE BAGS INTO EFFECT MANAGERS\n\n\nfunction _Platform_dispatchEffects(managers, cmdBag, subBag)\n{\n\tvar effectsDict = {};\n\t_Platform_gatherEffects(true, cmdBag, effectsDict, null);\n\t_Platform_gatherEffects(false, subBag, effectsDict, null);\n\n\tfor (var home in managers)\n\t{\n\t\t_Scheduler_rawSend(managers[home], {\n\t\t\t$: 'fx',\n\t\t\ta: effectsDict[home] || { i: _List_Nil, j: _List_Nil }\n\t\t});\n\t}\n}\n\n\nfunction _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)\n{\n\tswitch (bag.$)\n\t{\n\t\tcase 1:\n\t\t\tvar home = bag.k;\n\t\t\tvar effect = _Platform_toEffect(isCmd, home, taggers, bag.l);\n\t\t\teffectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\tfor (var list = bag.m; list.b; list = list.b) // WHILE_CONS\n\t\t\t{\n\t\t\t\t_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\t_Platform_gatherEffects(isCmd, bag.o, effectsDict, {\n\t\t\t\tp: bag.n,\n\t\t\t\tq: taggers\n\t\t\t});\n\t\t\treturn;\n\t}\n}\n\n\nfunction _Platform_toEffect(isCmd, home, taggers, value)\n{\n\tfunction applyTaggers(x)\n\t{\n\t\tfor (var temp = taggers; temp; temp = temp.q)\n\t\t{\n\t\t\tx = temp.p(x);\n\t\t}\n\t\treturn x;\n\t}\n\n\tvar map = isCmd\n\t\t? _Platform_effectManagers[home].e\n\t\t: _Platform_effectManagers[home].f;\n\n\treturn A2(map, applyTaggers, value)\n}\n\n\nfunction _Platform_insert(isCmd, newEffect, effects)\n{\n\teffects = effects || { i: _List_Nil, j: _List_Nil };\n\n\tisCmd\n\t\t? (effects.i = _List_Cons(newEffect, effects.i))\n\t\t: (effects.j = _List_Cons(newEffect, effects.j));\n\n\treturn effects;\n}\n\n\n\n// PORTS\n\n\nfunction _Platform_checkPortName(name)\n{\n\tif (_Platform_effectManagers[name])\n\t{\n\t\t_Debug_crash(3, name)\n\t}\n}\n\n\n\n// OUTGOING PORTS\n\n\nfunction _Platform_outgoingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\te: _Platform_outgoingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupOutgoingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });\n\n\nfunction _Platform_setupOutgoingPort(name)\n{\n\tvar subs = [];\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Process_sleep(0);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, cmdList, state)\n\t{\n\t\tfor ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS\n\t\t{\n\t\t\t// grab a separate reference to subs in case unsubscribe is called\n\t\t\tvar currentSubs = subs;\n\t\t\tvar value = _Json_unwrap(converter(cmdList.a));\n\t\t\tfor (var i = 0; i < currentSubs.length; i++)\n\t\t\t{\n\t\t\t\tcurrentSubs[i](value);\n\t\t\t}\n\t\t}\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction subscribe(callback)\n\t{\n\t\tsubs.push(callback);\n\t}\n\n\tfunction unsubscribe(callback)\n\t{\n\t\t// copy subs into a new array in case unsubscribe is called within a\n\t\t// subscribed callback\n\t\tsubs = subs.slice();\n\t\tvar index = subs.indexOf(callback);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tsubs.splice(index, 1);\n\t\t}\n\t}\n\n\treturn {\n\t\tsubscribe: subscribe,\n\t\tunsubscribe: unsubscribe\n\t};\n}\n\n\n\n// INCOMING PORTS\n\n\nfunction _Platform_incomingPort(name, converter)\n{\n\t_Platform_checkPortName(name);\n\t_Platform_effectManagers[name] = {\n\t\tf: _Platform_incomingPortMap,\n\t\tr: converter,\n\t\ta: _Platform_setupIncomingPort\n\t};\n\treturn _Platform_leaf(name);\n}\n\n\nvar _Platform_incomingPortMap = F2(function(tagger, finalTagger)\n{\n\treturn function(value)\n\t{\n\t\treturn tagger(finalTagger(value));\n\t};\n});\n\n\nfunction _Platform_setupIncomingPort(name, sendToApp)\n{\n\tvar subs = _List_Nil;\n\tvar converter = _Platform_effectManagers[name].r;\n\n\t// CREATE MANAGER\n\n\tvar init = _Scheduler_succeed(null);\n\n\t_Platform_effectManagers[name].b = init;\n\t_Platform_effectManagers[name].c = F3(function(router, subList, state)\n\t{\n\t\tsubs = subList;\n\t\treturn init;\n\t});\n\n\t// PUBLIC API\n\n\tfunction send(incomingValue)\n\t{\n\t\tvar result = A2(_Json_run, converter, _Json_wrap(incomingValue));\n\n\t\t$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);\n\n\t\tvar value = result.a;\n\t\tfor (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS\n\t\t{\n\t\t\tsendToApp(temp.a(value));\n\t\t}\n\t}\n\n\treturn { send: send };\n}\n\n\n\n// EXPORT ELM MODULES\n//\n// Have DEBUG and PROD versions so that we can (1) give nicer errors in\n// debug mode and (2) not pay for the bits needed for that in prod mode.\n//\n\n\nfunction _Platform_export(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsProd(scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsProd(obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6)\n\t\t\t\t: _Platform_mergeExportsProd(obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\nfunction _Platform_export_UNUSED(exports)\n{\n\tscope['Elm']\n\t\t? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)\n\t\t: scope['Elm'] = exports;\n}\n\n\nfunction _Platform_mergeExportsDebug(moduleName, obj, exports)\n{\n\tfor (var name in exports)\n\t{\n\t\t(name in obj)\n\t\t\t? (name == 'init')\n\t\t\t\t? _Debug_crash(6, moduleName)\n\t\t\t\t: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])\n\t\t\t: (obj[name] = exports[name]);\n\t}\n}\n\n\n\n\n// HELPERS\n\n\nvar _VirtualDom_divertHrefToApp;\n\nvar _VirtualDom_doc = typeof document !== 'undefined' ? document : {};\n\n\nfunction _VirtualDom_appendChild(parent, child)\n{\n\tparent.appendChild(child);\n}\n\nvar _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)\n{\n\t// NOTE: this function needs _Platform_export available to work\n\n\t/**/\n\tvar node = args['node'];\n\t//*/\n\t/**_UNUSED/\n\tvar node = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t//*/\n\n\tnode.parentNode.replaceChild(\n\t\t_VirtualDom_render(virtualNode, function() {}),\n\t\tnode\n\t);\n\n\treturn {};\n});\n\n\n\n// TEXT\n\n\nfunction _VirtualDom_text(string)\n{\n\treturn {\n\t\t$: 0,\n\t\ta: string\n\t};\n}\n\n\n\n// NODE\n\n\nvar _VirtualDom_nodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 1,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_node = _VirtualDom_nodeNS(undefined);\n\n\n\n// KEYED NODE\n\n\nvar _VirtualDom_keyedNodeNS = F2(function(namespace, tag)\n{\n\treturn F2(function(factList, kidList)\n\t{\n\t\tfor (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS\n\t\t{\n\t\t\tvar kid = kidList.a;\n\t\t\tdescendantsCount += (kid.b.b || 0);\n\t\t\tkids.push(kid);\n\t\t}\n\t\tdescendantsCount += kids.length;\n\n\t\treturn {\n\t\t\t$: 2,\n\t\t\tc: tag,\n\t\t\td: _VirtualDom_organizeFacts(factList),\n\t\t\te: kids,\n\t\t\tf: namespace,\n\t\t\tb: descendantsCount\n\t\t};\n\t});\n});\n\n\nvar _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);\n\n\n\n// CUSTOM\n\n\nfunction _VirtualDom_custom(factList, model, render, diff)\n{\n\treturn {\n\t\t$: 3,\n\t\td: _VirtualDom_organizeFacts(factList),\n\t\tg: model,\n\t\th: render,\n\t\ti: diff\n\t};\n}\n\n\n\n// MAP\n\n\nvar _VirtualDom_map = F2(function(tagger, node)\n{\n\treturn {\n\t\t$: 4,\n\t\tj: tagger,\n\t\tk: node,\n\t\tb: 1 + (node.b || 0)\n\t};\n});\n\n\n\n// LAZY\n\n\nfunction _VirtualDom_thunk(refs, thunk)\n{\n\treturn {\n\t\t$: 5,\n\t\tl: refs,\n\t\tm: thunk,\n\t\tk: undefined\n\t};\n}\n\nvar _VirtualDom_lazy = F2(function(func, a)\n{\n\treturn _VirtualDom_thunk([func, a], function() {\n\t\treturn func(a);\n\t});\n});\n\nvar _VirtualDom_lazy2 = F3(function(func, a, b)\n{\n\treturn _VirtualDom_thunk([func, a, b], function() {\n\t\treturn A2(func, a, b);\n\t});\n});\n\nvar _VirtualDom_lazy3 = F4(function(func, a, b, c)\n{\n\treturn _VirtualDom_thunk([func, a, b, c], function() {\n\t\treturn A3(func, a, b, c);\n\t});\n});\n\nvar _VirtualDom_lazy4 = F5(function(func, a, b, c, d)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d], function() {\n\t\treturn A4(func, a, b, c, d);\n\t});\n});\n\nvar _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e], function() {\n\t\treturn A5(func, a, b, c, d, e);\n\t});\n});\n\nvar _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f], function() {\n\t\treturn A6(func, a, b, c, d, e, f);\n\t});\n});\n\nvar _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {\n\t\treturn A7(func, a, b, c, d, e, f, g);\n\t});\n});\n\nvar _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)\n{\n\treturn _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {\n\t\treturn A8(func, a, b, c, d, e, f, g, h);\n\t});\n});\n\n\n\n// FACTS\n\n\nvar _VirtualDom_on = F2(function(key, handler)\n{\n\treturn {\n\t\t$: 'a0',\n\t\tn: key,\n\t\to: handler\n\t};\n});\nvar _VirtualDom_style = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a1',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_property = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a2',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attribute = F2(function(key, value)\n{\n\treturn {\n\t\t$: 'a3',\n\t\tn: key,\n\t\to: value\n\t};\n});\nvar _VirtualDom_attributeNS = F3(function(namespace, key, value)\n{\n\treturn {\n\t\t$: 'a4',\n\t\tn: key,\n\t\to: { f: namespace, o: value }\n\t};\n});\n\n\n\n// XSS ATTACK VECTOR CHECKS\n\n\nfunction _VirtualDom_noScript(tag)\n{\n\treturn tag == 'script' ? 'p' : tag;\n}\n\nfunction _VirtualDom_noOnOrFormAction(key)\n{\n\treturn /^(on|formAction$)/i.test(key) ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noInnerHtmlOrFormAction(key)\n{\n\treturn key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;\n}\n\nfunction _VirtualDom_noJavaScriptUri(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,'')) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptUri_UNUSED(value)\n{\n\treturn /^javascript:/i.test(value.replace(/\\s/g,''))\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value) ? '' : value;\n}\n\nfunction _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)\n{\n\treturn /^\\s*(javascript:|data:text\\/html)/i.test(value)\n\t\t? 'javascript:alert(\"This is an XSS vector. Please use ports or web components instead.\")'\n\t\t: value;\n}\n\n\n\n// MAP FACTS\n\n\nvar _VirtualDom_mapAttribute = F2(function(func, attr)\n{\n\treturn (attr.$ === 'a0')\n\t\t? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))\n\t\t: attr;\n});\n\nfunction _VirtualDom_mapHandler(func, handler)\n{\n\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t// 0 = Normal\n\t// 1 = MayStopPropagation\n\t// 2 = MayPreventDefault\n\t// 3 = Custom\n\n\treturn {\n\t\t$: handler.$,\n\t\ta:\n\t\t\t!tag\n\t\t\t\t? A2($elm$json$Json$Decode$map, func, handler.a)\n\t\t\t\t:\n\t\t\tA3($elm$json$Json$Decode$map2,\n\t\t\t\ttag < 3\n\t\t\t\t\t? _VirtualDom_mapEventTuple\n\t\t\t\t\t: _VirtualDom_mapEventRecord,\n\t\t\t\t$elm$json$Json$Decode$succeed(func),\n\t\t\t\thandler.a\n\t\t\t)\n\t};\n}\n\nvar _VirtualDom_mapEventTuple = F2(function(func, tuple)\n{\n\treturn _Utils_Tuple2(func(tuple.a), tuple.b);\n});\n\nvar _VirtualDom_mapEventRecord = F2(function(func, record)\n{\n\treturn {\n\t\tt: func(record.t),\n\t\tah: record.ah,\n\t\tad: record.ad\n\t}\n});\n\n\n\n// ORGANIZE FACTS\n\n\nfunction _VirtualDom_organizeFacts(factList)\n{\n\tfor (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS\n\t{\n\t\tvar entry = factList.a;\n\n\t\tvar tag = entry.$;\n\t\tvar key = entry.n;\n\t\tvar value = entry.o;\n\n\t\tif (tag === 'a2')\n\t\t{\n\t\t\t(key === 'className')\n\t\t\t\t? _VirtualDom_addClass(facts, key, _Json_unwrap(value))\n\t\t\t\t: facts[key] = _Json_unwrap(value);\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar subFacts = facts[tag] || (facts[tag] = {});\n\t\t(tag === 'a3' && key === 'class')\n\t\t\t? _VirtualDom_addClass(subFacts, key, value)\n\t\t\t: subFacts[key] = value;\n\t}\n\n\treturn facts;\n}\n\nfunction _VirtualDom_addClass(object, key, newClass)\n{\n\tvar classes = object[key];\n\tobject[key] = classes ? classes + ' ' + newClass : newClass;\n}\n\n\n\n// RENDER\n\n\nfunction _VirtualDom_render(vNode, eventNode)\n{\n\tvar tag = vNode.$;\n\n\tif (tag === 5)\n\t{\n\t\treturn _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);\n\t}\n\n\tif (tag === 0)\n\t{\n\t\treturn _VirtualDom_doc.createTextNode(vNode.a);\n\t}\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\t\tvar tagger = vNode.j;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\ttypeof tagger !== 'object'\n\t\t\t\t? tagger = [tagger, subNode.j]\n\t\t\t\t: tagger.push(subNode.j);\n\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\tvar subEventRoot = { j: tagger, p: eventNode };\n\t\tvar domNode = _VirtualDom_render(subNode, subEventRoot);\n\t\tdomNode.elm_event_node_ref = subEventRoot;\n\t\treturn domNode;\n\t}\n\n\tif (tag === 3)\n\t{\n\t\tvar domNode = vNode.h(vNode.g);\n\t\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\t\treturn domNode;\n\t}\n\n\t// at this point `tag` must be 1 or 2\n\n\tvar domNode = vNode.f\n\t\t? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)\n\t\t: _VirtualDom_doc.createElement(vNode.c);\n\n\tif (_VirtualDom_divertHrefToApp && vNode.c == 'a')\n\t{\n\t\tdomNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));\n\t}\n\n\t_VirtualDom_applyFacts(domNode, eventNode, vNode.d);\n\n\tfor (var kids = vNode.e, i = 0; i < kids.length; i++)\n\t{\n\t\t_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));\n\t}\n\n\treturn domNode;\n}\n\n\n\n// APPLY FACTS\n\n\nfunction _VirtualDom_applyFacts(domNode, eventNode, facts)\n{\n\tfor (var key in facts)\n\t{\n\t\tvar value = facts[key];\n\n\t\tkey === 'a1'\n\t\t\t? _VirtualDom_applyStyles(domNode, value)\n\t\t\t:\n\t\tkey === 'a0'\n\t\t\t? _VirtualDom_applyEvents(domNode, eventNode, value)\n\t\t\t:\n\t\tkey === 'a3'\n\t\t\t? _VirtualDom_applyAttrs(domNode, value)\n\t\t\t:\n\t\tkey === 'a4'\n\t\t\t? _VirtualDom_applyAttrsNS(domNode, value)\n\t\t\t:\n\t\t((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);\n\t}\n}\n\n\n\n// APPLY STYLES\n\n\nfunction _VirtualDom_applyStyles(domNode, styles)\n{\n\tvar domNodeStyle = domNode.style;\n\n\tfor (var key in styles)\n\t{\n\t\tdomNodeStyle[key] = styles[key];\n\t}\n}\n\n\n\n// APPLY ATTRS\n\n\nfunction _VirtualDom_applyAttrs(domNode, attrs)\n{\n\tfor (var key in attrs)\n\t{\n\t\tvar value = attrs[key];\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttribute(key, value)\n\t\t\t: domNode.removeAttribute(key);\n\t}\n}\n\n\n\n// APPLY NAMESPACED ATTRS\n\n\nfunction _VirtualDom_applyAttrsNS(domNode, nsAttrs)\n{\n\tfor (var key in nsAttrs)\n\t{\n\t\tvar pair = nsAttrs[key];\n\t\tvar namespace = pair.f;\n\t\tvar value = pair.o;\n\n\t\ttypeof value !== 'undefined'\n\t\t\t? domNode.setAttributeNS(namespace, key, value)\n\t\t\t: domNode.removeAttributeNS(namespace, key);\n\t}\n}\n\n\n\n// APPLY EVENTS\n\n\nfunction _VirtualDom_applyEvents(domNode, eventNode, events)\n{\n\tvar allCallbacks = domNode.elmFs || (domNode.elmFs = {});\n\n\tfor (var key in events)\n\t{\n\t\tvar newHandler = events[key];\n\t\tvar oldCallback = allCallbacks[key];\n\n\t\tif (!newHandler)\n\t\t{\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t\tallCallbacks[key] = undefined;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (oldCallback)\n\t\t{\n\t\t\tvar oldHandler = oldCallback.q;\n\t\t\tif (oldHandler.$ === newHandler.$)\n\t\t\t{\n\t\t\t\toldCallback.q = newHandler;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tdomNode.removeEventListener(key, oldCallback);\n\t\t}\n\n\t\toldCallback = _VirtualDom_makeCallback(eventNode, newHandler);\n\t\tdomNode.addEventListener(key, oldCallback,\n\t\t\t_VirtualDom_passiveSupported\n\t\t\t&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }\n\t\t);\n\t\tallCallbacks[key] = oldCallback;\n\t}\n}\n\n\n\n// PASSIVE EVENTS\n\n\nvar _VirtualDom_passiveSupported;\n\ntry\n{\n\twindow.addEventListener('t', null, Object.defineProperty({}, 'passive', {\n\t\tget: function() { _VirtualDom_passiveSupported = true; }\n\t}));\n}\ncatch(e) {}\n\n\n\n// EVENT HANDLERS\n\n\nfunction _VirtualDom_makeCallback(eventNode, initialHandler)\n{\n\tfunction callback(event)\n\t{\n\t\tvar handler = callback.q;\n\t\tvar result = _Json_runHelp(handler.a, event);\n\n\t\tif (!$elm$core$Result$isOk(result))\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tvar tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);\n\n\t\t// 0 = Normal\n\t\t// 1 = MayStopPropagation\n\t\t// 2 = MayPreventDefault\n\t\t// 3 = Custom\n\n\t\tvar value = result.a;\n\t\tvar message = !tag ? value : tag < 3 ? value.a : value.t;\n\t\tvar stopPropagation = tag == 1 ? value.b : tag == 3 && value.ah;\n\t\tvar currentEventNode = (\n\t\t\tstopPropagation && event.stopPropagation(),\n\t\t\t(tag == 2 ? value.b : tag == 3 && value.ad) && event.preventDefault(),\n\t\t\teventNode\n\t\t);\n\t\tvar tagger;\n\t\tvar i;\n\t\twhile (tagger = currentEventNode.j)\n\t\t{\n\t\t\tif (typeof tagger == 'function')\n\t\t\t{\n\t\t\t\tmessage = tagger(message);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (var i = tagger.length; i--; )\n\t\t\t\t{\n\t\t\t\t\tmessage = tagger[i](message);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentEventNode = currentEventNode.p;\n\t\t}\n\t\tcurrentEventNode(message, stopPropagation); // stopPropagation implies isSync\n\t}\n\n\tcallback.q = initialHandler;\n\n\treturn callback;\n}\n\nfunction _VirtualDom_equalEvents(x, y)\n{\n\treturn x.$ == y.$ && _Json_equality(x.a, y.a);\n}\n\n\n\n// DIFF\n\n\n// TODO: Should we do patches like in iOS?\n//\n// type Patch\n//   = At Int Patch\n//   | Batch (List Patch)\n//   | Change ...\n//\n// How could it not be better?\n//\nfunction _VirtualDom_diff(x, y)\n{\n\tvar patches = [];\n\t_VirtualDom_diffHelp(x, y, patches, 0);\n\treturn patches;\n}\n\n\nfunction _VirtualDom_pushPatch(patches, type, index, data)\n{\n\tvar patch = {\n\t\t$: type,\n\t\tr: index,\n\t\ts: data,\n\t\tt: undefined,\n\t\tu: undefined\n\t};\n\tpatches.push(patch);\n\treturn patch;\n}\n\n\nfunction _VirtualDom_diffHelp(x, y, patches, index)\n{\n\tif (x === y)\n\t{\n\t\treturn;\n\t}\n\n\tvar xType = x.$;\n\tvar yType = y.$;\n\n\t// Bail if you run into different types of nodes. Implies that the\n\t// structure has changed significantly and it's not worth a diff.\n\tif (xType !== yType)\n\t{\n\t\tif (xType === 1 && yType === 2)\n\t\t{\n\t\t\ty = _VirtualDom_dekey(y);\n\t\t\tyType = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\treturn;\n\t\t}\n\t}\n\n\t// Now we know that both nodes are the same $.\n\tswitch (yType)\n\t{\n\t\tcase 5:\n\t\t\tvar xRefs = x.l;\n\t\t\tvar yRefs = y.l;\n\t\t\tvar i = xRefs.length;\n\t\t\tvar same = i === yRefs.length;\n\t\t\twhile (same && i--)\n\t\t\t{\n\t\t\t\tsame = xRefs[i] === yRefs[i];\n\t\t\t}\n\t\t\tif (same)\n\t\t\t{\n\t\t\t\ty.k = x.k;\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ty.k = y.m();\n\t\t\tvar subPatches = [];\n\t\t\t_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);\n\t\t\tsubPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);\n\t\t\treturn;\n\n\t\tcase 4:\n\t\t\t// gather nested taggers\n\t\t\tvar xTaggers = x.j;\n\t\t\tvar yTaggers = y.j;\n\t\t\tvar nesting = false;\n\n\t\t\tvar xSubNode = x.k;\n\t\t\twhile (xSubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof xTaggers !== 'object'\n\t\t\t\t\t? xTaggers = [xTaggers, xSubNode.j]\n\t\t\t\t\t: xTaggers.push(xSubNode.j);\n\n\t\t\t\txSubNode = xSubNode.k;\n\t\t\t}\n\n\t\t\tvar ySubNode = y.k;\n\t\t\twhile (ySubNode.$ === 4)\n\t\t\t{\n\t\t\t\tnesting = true;\n\n\t\t\t\ttypeof yTaggers !== 'object'\n\t\t\t\t\t? yTaggers = [yTaggers, ySubNode.j]\n\t\t\t\t\t: yTaggers.push(ySubNode.j);\n\n\t\t\t\tySubNode = ySubNode.k;\n\t\t\t}\n\n\t\t\t// Just bail if different numbers of taggers. This implies the\n\t\t\t// structure of the virtual DOM has changed.\n\t\t\tif (nesting && xTaggers.length !== yTaggers.length)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// check if taggers are \"the same\"\n\t\t\tif (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 2, index, yTaggers);\n\t\t\t}\n\n\t\t\t// diff everything below the taggers\n\t\t\t_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);\n\t\t\treturn;\n\n\t\tcase 0:\n\t\t\tif (x.a !== y.a)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 3, index, y.a);\n\t\t\t}\n\t\t\treturn;\n\n\t\tcase 1:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);\n\t\t\treturn;\n\n\t\tcase 2:\n\t\t\t_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);\n\t\t\treturn;\n\n\t\tcase 3:\n\t\t\tif (x.h !== y.h)\n\t\t\t{\n\t\t\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\t\t\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\t\t\tvar patch = y.i(x.g, y.g);\n\t\t\tpatch && _VirtualDom_pushPatch(patches, 5, index, patch);\n\n\t\t\treturn;\n\t}\n}\n\n// assumes the incoming arrays are the same length\nfunction _VirtualDom_pairwiseRefEqual(as, bs)\n{\n\tfor (var i = 0; i < as.length; i++)\n\t{\n\t\tif (as[i] !== bs[i])\n\t\t{\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction _VirtualDom_diffNodes(x, y, patches, index, diffKids)\n{\n\t// Bail if obvious indicators have changed. Implies more serious\n\t// structural changes such that it's not worth it to diff.\n\tif (x.c !== y.c || x.f !== y.f)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 0, index, y);\n\t\treturn;\n\t}\n\n\tvar factsDiff = _VirtualDom_diffFacts(x.d, y.d);\n\tfactsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);\n\n\tdiffKids(x, y, patches, index);\n}\n\n\n\n// DIFF FACTS\n\n\n// TODO Instead of creating a new diff object, it's possible to just test if\n// there *is* a diff. During the actual patch, do the diff again and make the\n// modifications directly. This way, there's no new allocations. Worth it?\nfunction _VirtualDom_diffFacts(x, y, category)\n{\n\tvar diff;\n\n\t// look for changes and removals\n\tfor (var xKey in x)\n\t{\n\t\tif (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')\n\t\t{\n\t\t\tvar subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);\n\t\t\tif (subDiff)\n\t\t\t{\n\t\t\t\tdiff = diff || {};\n\t\t\t\tdiff[xKey] = subDiff;\n\t\t\t}\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove if not in the new facts\n\t\tif (!(xKey in y))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[xKey] =\n\t\t\t\t!category\n\t\t\t\t\t? (typeof x[xKey] === 'string' ? '' : null)\n\t\t\t\t\t:\n\t\t\t\t(category === 'a1')\n\t\t\t\t\t? ''\n\t\t\t\t\t:\n\t\t\t\t(category === 'a0' || category === 'a3')\n\t\t\t\t\t? undefined\n\t\t\t\t\t:\n\t\t\t\t{ f: x[xKey].f, o: undefined };\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar xValue = x[xKey];\n\t\tvar yValue = y[xKey];\n\n\t\t// reference equal, so don't worry about it\n\t\tif (xValue === yValue && xKey !== 'value' && xKey !== 'checked'\n\t\t\t|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))\n\t\t{\n\t\t\tcontinue;\n\t\t}\n\n\t\tdiff = diff || {};\n\t\tdiff[xKey] = yValue;\n\t}\n\n\t// add new stuff\n\tfor (var yKey in y)\n\t{\n\t\tif (!(yKey in x))\n\t\t{\n\t\t\tdiff = diff || {};\n\t\t\tdiff[yKey] = y[yKey];\n\t\t}\n\t}\n\n\treturn diff;\n}\n\n\n\n// DIFF KIDS\n\n\nfunction _VirtualDom_diffKids(xParent, yParent, patches, index)\n{\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\n\t// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS\n\n\tif (xLen > yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 6, index, {\n\t\t\tv: yLen,\n\t\t\ti: xLen - yLen\n\t\t});\n\t}\n\telse if (xLen < yLen)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 7, index, {\n\t\t\tv: xLen,\n\t\t\te: yKids\n\t\t});\n\t}\n\n\t// PAIRWISE DIFF EVERYTHING ELSE\n\n\tfor (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)\n\t{\n\t\tvar xKid = xKids[i];\n\t\t_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);\n\t\tindex += xKid.b || 0;\n\t}\n}\n\n\n\n// KEYED DIFF\n\n\nfunction _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)\n{\n\tvar localPatches = [];\n\n\tvar changes = {}; // Dict String Entry\n\tvar inserts = []; // Array { index : Int, entry : Entry }\n\t// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }\n\n\tvar xKids = xParent.e;\n\tvar yKids = yParent.e;\n\tvar xLen = xKids.length;\n\tvar yLen = yKids.length;\n\tvar xIndex = 0;\n\tvar yIndex = 0;\n\n\tvar index = rootIndex;\n\n\twhile (xIndex < xLen && yIndex < yLen)\n\t{\n\t\tvar x = xKids[xIndex];\n\t\tvar y = yKids[yIndex];\n\n\t\tvar xKey = x.a;\n\t\tvar yKey = y.a;\n\t\tvar xNode = x.b;\n\t\tvar yNode = y.b;\n\n\t\tvar newMatch = undefined;\n\t\tvar oldMatch = undefined;\n\n\t\t// check if keys match\n\n\t\tif (xKey === yKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex++;\n\t\t\tyIndex++;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// look ahead 1 to detect insertions and removals.\n\n\t\tvar xNext = xKids[xIndex + 1];\n\t\tvar yNext = yKids[yIndex + 1];\n\n\t\tif (xNext)\n\t\t{\n\t\t\tvar xNextKey = xNext.a;\n\t\t\tvar xNextNode = xNext.b;\n\t\t\toldMatch = yKey === xNextKey;\n\t\t}\n\n\t\tif (yNext)\n\t\t{\n\t\t\tvar yNextKey = yNext.a;\n\t\t\tvar yNextNode = yNext.b;\n\t\t\tnewMatch = xKey === yNextKey;\n\t\t}\n\n\n\t\t// swap x and y\n\t\tif (newMatch && oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// insert y\n\t\tif (newMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\t_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\txIndex += 1;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x\n\t\tif (oldMatch)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 1;\n\t\t\tcontinue;\n\t\t}\n\n\t\t// remove x, insert y\n\t\tif (xNext && xNextKey === yNextKey)\n\t\t{\n\t\t\tindex++;\n\t\t\t_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);\n\t\t\t_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);\n\t\t\tindex += xNode.b || 0;\n\n\t\t\tindex++;\n\t\t\t_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);\n\t\t\tindex += xNextNode.b || 0;\n\n\t\t\txIndex += 2;\n\t\t\tyIndex += 2;\n\t\t\tcontinue;\n\t\t}\n\n\t\tbreak;\n\t}\n\n\t// eat up any remaining nodes with removeNode and insertNode\n\n\twhile (xIndex < xLen)\n\t{\n\t\tindex++;\n\t\tvar x = xKids[xIndex];\n\t\tvar xNode = x.b;\n\t\t_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);\n\t\tindex += xNode.b || 0;\n\t\txIndex++;\n\t}\n\n\twhile (yIndex < yLen)\n\t{\n\t\tvar endInserts = endInserts || [];\n\t\tvar y = yKids[yIndex];\n\t\t_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);\n\t\tyIndex++;\n\t}\n\n\tif (localPatches.length > 0 || inserts.length > 0 || endInserts)\n\t{\n\t\t_VirtualDom_pushPatch(patches, 8, rootIndex, {\n\t\t\tw: localPatches,\n\t\t\tx: inserts,\n\t\t\ty: endInserts\n\t\t});\n\t}\n}\n\n\n\n// CHANGES FROM KEYED DIFF\n\n\nvar _VirtualDom_POSTFIX = '_elmW6BL';\n\n\nfunction _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tentry = {\n\t\t\tc: 0,\n\t\t\tz: vnode,\n\t\t\tr: yIndex,\n\t\t\ts: undefined\n\t\t};\n\n\t\tinserts.push({ r: yIndex, A: entry });\n\t\tchanges[key] = entry;\n\n\t\treturn;\n\t}\n\n\t// this key was removed earlier, a match!\n\tif (entry.c === 1)\n\t{\n\t\tinserts.push({ r: yIndex, A: entry });\n\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);\n\t\tentry.r = yIndex;\n\t\tentry.s.s = {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key has already been inserted or moved, a duplicate!\n\t_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);\n}\n\n\nfunction _VirtualDom_removeNode(changes, localPatches, key, vnode, index)\n{\n\tvar entry = changes[key];\n\n\t// never seen this key before\n\tif (!entry)\n\t{\n\t\tvar patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);\n\n\t\tchanges[key] = {\n\t\t\tc: 1,\n\t\t\tz: vnode,\n\t\t\tr: index,\n\t\t\ts: patch\n\t\t};\n\n\t\treturn;\n\t}\n\n\t// this key was inserted earlier, a match!\n\tif (entry.c === 0)\n\t{\n\t\tentry.c = 2;\n\t\tvar subPatches = [];\n\t\t_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);\n\n\t\t_VirtualDom_pushPatch(localPatches, 9, index, {\n\t\t\tw: subPatches,\n\t\t\tA: entry\n\t\t});\n\n\t\treturn;\n\t}\n\n\t// this key has already been removed or moved, a duplicate!\n\t_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);\n}\n\n\n\n// ADD DOM NODES\n//\n// Each DOM node has an \"index\" assigned in order of traversal. It is important\n// to minimize our crawl over the actual DOM, so these indexes (along with the\n// descendantsCount of virtual nodes) let us skip touching entire subtrees of\n// the DOM if we know there are no patches there.\n\n\nfunction _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)\n{\n\t_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);\n}\n\n\n// assumes `patches` is non-empty and indexes increase monotonically.\nfunction _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)\n{\n\tvar patch = patches[i];\n\tvar index = patch.r;\n\n\twhile (index === low)\n\t{\n\t\tvar patchType = patch.$;\n\n\t\tif (patchType === 1)\n\t\t{\n\t\t\t_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);\n\t\t}\n\t\telse if (patchType === 8)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar subPatches = patch.s.w;\n\t\t\tif (subPatches.length > 0)\n\t\t\t{\n\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t}\n\t\t}\n\t\telse if (patchType === 9)\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\n\t\t\tvar data = patch.s;\n\t\t\tif (data)\n\t\t\t{\n\t\t\t\tdata.A.s = domNode;\n\t\t\t\tvar subPatches = data.w;\n\t\t\t\tif (subPatches.length > 0)\n\t\t\t\t{\n\t\t\t\t\t_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tpatch.t = domNode;\n\t\t\tpatch.u = eventNode;\n\t\t}\n\n\t\ti++;\n\n\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t{\n\t\t\treturn i;\n\t\t}\n\t}\n\n\tvar tag = vNode.$;\n\n\tif (tag === 4)\n\t{\n\t\tvar subNode = vNode.k;\n\n\t\twhile (subNode.$ === 4)\n\t\t{\n\t\t\tsubNode = subNode.k;\n\t\t}\n\n\t\treturn _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);\n\t}\n\n\t// tag must be 1 or 2 at this point\n\n\tvar vKids = vNode.e;\n\tvar childNodes = domNode.childNodes;\n\tfor (var j = 0; j < vKids.length; j++)\n\t{\n\t\tlow++;\n\t\tvar vKid = tag === 1 ? vKids[j] : vKids[j].b;\n\t\tvar nextLow = low + (vKid.b || 0);\n\t\tif (low <= index && index <= nextLow)\n\t\t{\n\t\t\ti = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);\n\t\t\tif (!(patch = patches[i]) || (index = patch.r) > high)\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\tlow = nextLow;\n\t}\n\treturn i;\n}\n\n\n\n// APPLY PATCHES\n\n\nfunction _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)\n{\n\tif (patches.length === 0)\n\t{\n\t\treturn rootDomNode;\n\t}\n\n\t_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);\n\treturn _VirtualDom_applyPatchesHelp(rootDomNode, patches);\n}\n\nfunction _VirtualDom_applyPatchesHelp(rootDomNode, patches)\n{\n\tfor (var i = 0; i < patches.length; i++)\n\t{\n\t\tvar patch = patches[i];\n\t\tvar localDomNode = patch.t\n\t\tvar newNode = _VirtualDom_applyPatch(localDomNode, patch);\n\t\tif (localDomNode === rootDomNode)\n\t\t{\n\t\t\trootDomNode = newNode;\n\t\t}\n\t}\n\treturn rootDomNode;\n}\n\nfunction _VirtualDom_applyPatch(domNode, patch)\n{\n\tswitch (patch.$)\n\t{\n\t\tcase 0:\n\t\t\treturn _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);\n\n\t\tcase 4:\n\t\t\t_VirtualDom_applyFacts(domNode, patch.u, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 3:\n\t\t\tdomNode.replaceData(0, domNode.length, patch.s);\n\t\t\treturn domNode;\n\n\t\tcase 1:\n\t\t\treturn _VirtualDom_applyPatchesHelp(domNode, patch.s);\n\n\t\tcase 2:\n\t\t\tif (domNode.elm_event_node_ref)\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref.j = patch.s;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tdomNode.elm_event_node_ref = { j: patch.s, p: patch.u };\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 6:\n\t\t\tvar data = patch.s;\n\t\t\tfor (var i = 0; i < data.i; i++)\n\t\t\t{\n\t\t\t\tdomNode.removeChild(domNode.childNodes[data.v]);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 7:\n\t\t\tvar data = patch.s;\n\t\t\tvar kids = data.e;\n\t\t\tvar i = data.v;\n\t\t\tvar theEnd = domNode.childNodes[i];\n\t\t\tfor (; i < kids.length; i++)\n\t\t\t{\n\t\t\t\tdomNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);\n\t\t\t}\n\t\t\treturn domNode;\n\n\t\tcase 9:\n\t\t\tvar data = patch.s;\n\t\t\tif (!data)\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t\treturn domNode;\n\t\t\t}\n\t\t\tvar entry = data.A;\n\t\t\tif (typeof entry.r !== 'undefined')\n\t\t\t{\n\t\t\t\tdomNode.parentNode.removeChild(domNode);\n\t\t\t}\n\t\t\tentry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\t\t\treturn domNode;\n\n\t\tcase 8:\n\t\t\treturn _VirtualDom_applyPatchReorder(domNode, patch);\n\n\t\tcase 5:\n\t\t\treturn patch.s(domNode);\n\n\t\tdefault:\n\t\t\t_Debug_crash(10); // 'Ran into an unknown patch!'\n\t}\n}\n\n\nfunction _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)\n{\n\tvar parentNode = domNode.parentNode;\n\tvar newNode = _VirtualDom_render(vNode, eventNode);\n\n\tif (!newNode.elm_event_node_ref)\n\t{\n\t\tnewNode.elm_event_node_ref = domNode.elm_event_node_ref;\n\t}\n\n\tif (parentNode && newNode !== domNode)\n\t{\n\t\tparentNode.replaceChild(newNode, domNode);\n\t}\n\treturn newNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorder(domNode, patch)\n{\n\tvar data = patch.s;\n\n\t// remove end inserts\n\tvar frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);\n\n\t// removals\n\tdomNode = _VirtualDom_applyPatchesHelp(domNode, data.w);\n\n\t// inserts\n\tvar inserts = data.x;\n\tfor (var i = 0; i < inserts.length; i++)\n\t{\n\t\tvar insert = inserts[i];\n\t\tvar entry = insert.A;\n\t\tvar node = entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u);\n\t\tdomNode.insertBefore(node, domNode.childNodes[insert.r]);\n\t}\n\n\t// add end inserts\n\tif (frag)\n\t{\n\t\t_VirtualDom_appendChild(domNode, frag);\n\t}\n\n\treturn domNode;\n}\n\n\nfunction _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)\n{\n\tif (!endInserts)\n\t{\n\t\treturn;\n\t}\n\n\tvar frag = _VirtualDom_doc.createDocumentFragment();\n\tfor (var i = 0; i < endInserts.length; i++)\n\t{\n\t\tvar insert = endInserts[i];\n\t\tvar entry = insert.A;\n\t\t_VirtualDom_appendChild(frag, entry.c === 2\n\t\t\t? entry.s\n\t\t\t: _VirtualDom_render(entry.z, patch.u)\n\t\t);\n\t}\n\treturn frag;\n}\n\n\nfunction _VirtualDom_virtualize(node)\n{\n\t// TEXT NODES\n\n\tif (node.nodeType === 3)\n\t{\n\t\treturn _VirtualDom_text(node.textContent);\n\t}\n\n\n\t// WEIRD NODES\n\n\tif (node.nodeType !== 1)\n\t{\n\t\treturn _VirtualDom_text('');\n\t}\n\n\n\t// ELEMENT NODES\n\n\tvar attrList = _List_Nil;\n\tvar attrs = node.attributes;\n\tfor (var i = attrs.length; i--; )\n\t{\n\t\tvar attr = attrs[i];\n\t\tvar name = attr.name;\n\t\tvar value = attr.value;\n\t\tattrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );\n\t}\n\n\tvar tag = node.tagName.toLowerCase();\n\tvar kidList = _List_Nil;\n\tvar kids = node.childNodes;\n\n\tfor (var i = kids.length; i--; )\n\t{\n\t\tkidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);\n\t}\n\treturn A3(_VirtualDom_node, tag, attrList, kidList);\n}\n\nfunction _VirtualDom_dekey(keyedNode)\n{\n\tvar keyedKids = keyedNode.e;\n\tvar len = keyedKids.length;\n\tvar kids = new Array(len);\n\tfor (var i = 0; i < len; i++)\n\t{\n\t\tkids[i] = keyedKids[i].b;\n\t}\n\n\treturn {\n\t\t$: 1,\n\t\tc: keyedNode.c,\n\t\td: keyedNode.d,\n\t\te: kids,\n\t\tf: keyedNode.f,\n\t\tb: keyedNode.b\n\t};\n}\n\n\n\n\n// ELEMENT\n\n\nvar _Debugger_element;\n\nvar _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aT,\n\t\timpl.a$,\n\t\timpl.aZ,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar view = impl.a0;\n\t\t\t/**/\n\t\t\tvar domNode = args['node'];\n\t\t\t//*/\n\t\t\t/**_UNUSED/\n\t\t\tvar domNode = args && args['node'] ? args['node'] : _Debug_crash(0);\n\t\t\t//*/\n\t\t\tvar currNode = _VirtualDom_virtualize(domNode);\n\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\tvar nextNode = view(model);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tdomNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// DOCUMENT\n\n\nvar _Debugger_document;\n\nvar _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)\n{\n\treturn _Platform_initialize(\n\t\tflagDecoder,\n\t\targs,\n\t\timpl.aT,\n\t\timpl.a$,\n\t\timpl.aZ,\n\t\tfunction(sendToApp, initialModel) {\n\t\t\tvar divertHrefToApp = impl.af && impl.af(sendToApp)\n\t\t\tvar view = impl.a0;\n\t\t\tvar title = _VirtualDom_doc.title;\n\t\t\tvar bodyNode = _VirtualDom_doc.body;\n\t\t\tvar currNode = _VirtualDom_virtualize(bodyNode);\n\t\t\treturn _Browser_makeAnimator(initialModel, function(model)\n\t\t\t{\n\t\t\t\t_VirtualDom_divertHrefToApp = divertHrefToApp;\n\t\t\t\tvar doc = view(model);\n\t\t\t\tvar nextNode = _VirtualDom_node('body')(_List_Nil)(doc.aL);\n\t\t\t\tvar patches = _VirtualDom_diff(currNode, nextNode);\n\t\t\t\tbodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);\n\t\t\t\tcurrNode = nextNode;\n\t\t\t\t_VirtualDom_divertHrefToApp = 0;\n\t\t\t\t(title !== doc.a_) && (_VirtualDom_doc.title = title = doc.a_);\n\t\t\t});\n\t\t}\n\t);\n});\n\n\n\n// ANIMATION\n\n\nvar _Browser_cancelAnimationFrame =\n\ttypeof cancelAnimationFrame !== 'undefined'\n\t\t? cancelAnimationFrame\n\t\t: function(id) { clearTimeout(id); };\n\nvar _Browser_requestAnimationFrame =\n\ttypeof requestAnimationFrame !== 'undefined'\n\t\t? requestAnimationFrame\n\t\t: function(callback) { return setTimeout(callback, 1000 / 60); };\n\n\nfunction _Browser_makeAnimator(model, draw)\n{\n\tdraw(model);\n\n\tvar state = 0;\n\n\tfunction updateIfNeeded()\n\t{\n\t\tstate = state === 1\n\t\t\t? 0\n\t\t\t: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );\n\t}\n\n\treturn function(nextModel, isSync)\n\t{\n\t\tmodel = nextModel;\n\n\t\tisSync\n\t\t\t? ( draw(model),\n\t\t\t\tstate === 2 && (state = 1)\n\t\t\t\t)\n\t\t\t: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),\n\t\t\t\tstate = 2\n\t\t\t\t);\n\t};\n}\n\n\n\n// APPLICATION\n\n\nfunction _Browser_application(impl)\n{\n\tvar onUrlChange = impl.aV;\n\tvar onUrlRequest = impl.aW;\n\tvar key = function() { key.a(onUrlChange(_Browser_getUrl())); };\n\n\treturn _Browser_document({\n\t\taf: function(sendToApp)\n\t\t{\n\t\t\tkey.a = sendToApp;\n\t\t\t_Browser_window.addEventListener('popstate', key);\n\t\t\t_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);\n\n\t\t\treturn F2(function(domNode, event)\n\t\t\t{\n\t\t\t\tif (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))\n\t\t\t\t{\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tvar href = domNode.href;\n\t\t\t\t\tvar curr = _Browser_getUrl();\n\t\t\t\t\tvar next = $elm$url$Url$fromString(href).a;\n\t\t\t\t\tsendToApp(onUrlRequest(\n\t\t\t\t\t\t(next\n\t\t\t\t\t\t\t&& curr.az === next.az\n\t\t\t\t\t\t\t&& curr.ap === next.ap\n\t\t\t\t\t\t\t&& curr.aw.a === next.aw.a\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\t? $elm$browser$Browser$Internal(next)\n\t\t\t\t\t\t\t: $elm$browser$Browser$External(href)\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\taT: function(flags)\n\t\t{\n\t\t\treturn A3(impl.aT, flags, _Browser_getUrl(), key);\n\t\t},\n\t\ta0: impl.a0,\n\t\ta$: impl.a$,\n\t\taZ: impl.aZ\n\t});\n}\n\nfunction _Browser_getUrl()\n{\n\treturn $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);\n}\n\nvar _Browser_go = F2(function(key, n)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\tn && history.go(n);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_pushUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.pushState({}, '', url);\n\t\tkey();\n\t}));\n});\n\nvar _Browser_replaceUrl = F2(function(key, url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {\n\t\thistory.replaceState({}, '', url);\n\t\tkey();\n\t}));\n});\n\n\n\n// GLOBAL EVENTS\n\n\nvar _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };\nvar _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;\nvar _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;\n\nvar _Browser_on = F3(function(node, eventName, sendToSelf)\n{\n\treturn _Scheduler_spawn(_Scheduler_binding(function(callback)\n\t{\n\t\tfunction handler(event)\t{ _Scheduler_rawSpawn(sendToSelf(event)); }\n\t\tnode.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });\n\t\treturn function() { node.removeEventListener(eventName, handler); };\n\t}));\n});\n\nvar _Browser_decodeEvent = F2(function(decoder, event)\n{\n\tvar result = _Json_runHelp(decoder, event);\n\treturn $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;\n});\n\n\n\n// PAGE VISIBILITY\n\n\nfunction _Browser_visibilityInfo()\n{\n\treturn (typeof _VirtualDom_doc.hidden !== 'undefined')\n\t\t? { aR: 'hidden', aM: 'visibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.mozHidden !== 'undefined')\n\t\t? { aR: 'mozHidden', aM: 'mozvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.msHidden !== 'undefined')\n\t\t? { aR: 'msHidden', aM: 'msvisibilitychange' }\n\t\t:\n\t(typeof _VirtualDom_doc.webkitHidden !== 'undefined')\n\t\t? { aR: 'webkitHidden', aM: 'webkitvisibilitychange' }\n\t\t: { aR: 'hidden', aM: 'visibilitychange' };\n}\n\n\n\n// ANIMATION FRAMES\n\n\nfunction _Browser_rAF()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = _Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(Date.now()));\n\t\t});\n\n\t\treturn function() {\n\t\t\t_Browser_cancelAnimationFrame(id);\n\t\t};\n\t});\n}\n\n\nfunction _Browser_now()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(Date.now()));\n\t});\n}\n\n\n\n// DOM STUFF\n\n\nfunction _Browser_withNode(id, doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tvar node = document.getElementById(id);\n\t\t\tcallback(node\n\t\t\t\t? _Scheduler_succeed(doStuff(node))\n\t\t\t\t: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))\n\t\t\t);\n\t\t});\n\t});\n}\n\n\nfunction _Browser_withWindow(doStuff)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\t_Browser_requestAnimationFrame(function() {\n\t\t\tcallback(_Scheduler_succeed(doStuff()));\n\t\t});\n\t});\n}\n\n\n// FOCUS and BLUR\n\n\nvar _Browser_call = F2(function(functionName, id)\n{\n\treturn _Browser_withNode(id, function(node) {\n\t\tnode[functionName]();\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// WINDOW VIEWPORT\n\n\nfunction _Browser_getViewport()\n{\n\treturn {\n\t\taE: _Browser_getScene(),\n\t\taH: {\n\t\t\tY: _Browser_window.pageXOffset,\n\t\t\tZ: _Browser_window.pageYOffset,\n\t\t\tJ: _Browser_doc.documentElement.clientWidth,\n\t\t\tC: _Browser_doc.documentElement.clientHeight\n\t\t}\n\t};\n}\n\nfunction _Browser_getScene()\n{\n\tvar body = _Browser_doc.body;\n\tvar elem = _Browser_doc.documentElement;\n\treturn {\n\t\tJ: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),\n\t\tC: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)\n\t};\n}\n\nvar _Browser_setViewport = F2(function(x, y)\n{\n\treturn _Browser_withWindow(function()\n\t{\n\t\t_Browser_window.scroll(x, y);\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT VIEWPORT\n\n\nfunction _Browser_getViewportOf(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\treturn {\n\t\t\taE: {\n\t\t\t\tJ: node.scrollWidth,\n\t\t\t\tC: node.scrollHeight\n\t\t\t},\n\t\t\taH: {\n\t\t\t\tY: node.scrollLeft,\n\t\t\t\tZ: node.scrollTop,\n\t\t\t\tJ: node.clientWidth,\n\t\t\t\tC: node.clientHeight\n\t\t\t}\n\t\t};\n\t});\n}\n\n\nvar _Browser_setViewportOf = F3(function(id, x, y)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tnode.scrollLeft = x;\n\t\tnode.scrollTop = y;\n\t\treturn _Utils_Tuple0;\n\t});\n});\n\n\n\n// ELEMENT\n\n\nfunction _Browser_getElement(id)\n{\n\treturn _Browser_withNode(id, function(node)\n\t{\n\t\tvar rect = node.getBoundingClientRect();\n\t\tvar x = _Browser_window.pageXOffset;\n\t\tvar y = _Browser_window.pageYOffset;\n\t\treturn {\n\t\t\taE: _Browser_getScene(),\n\t\t\taH: {\n\t\t\t\tY: x,\n\t\t\t\tZ: y,\n\t\t\t\tJ: _Browser_doc.documentElement.clientWidth,\n\t\t\t\tC: _Browser_doc.documentElement.clientHeight\n\t\t\t},\n\t\t\taN: {\n\t\t\t\tY: x + rect.left,\n\t\t\t\tZ: y + rect.top,\n\t\t\t\tJ: rect.width,\n\t\t\t\tC: rect.height\n\t\t\t}\n\t\t};\n\t});\n}\n\n\n\n// LOAD and RELOAD\n\n\nfunction _Browser_reload(skipCache)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\t_VirtualDom_doc.location.reload(skipCache);\n\t}));\n}\n\nfunction _Browser_load(url)\n{\n\treturn A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\t_Browser_window.location = url;\n\t\t}\n\t\tcatch(err)\n\t\t{\n\t\t\t// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.\n\t\t\t// Other browsers reload the page, so let's be consistent about that.\n\t\t\t_VirtualDom_doc.location.reload(false);\n\t\t}\n\t}));\n}\n\n\n\nfunction _Time_now(millisToPosix)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(millisToPosix(Date.now())));\n\t});\n}\n\nvar _Time_setInterval = F2(function(interval, task)\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tvar id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);\n\t\treturn function() { clearInterval(id); };\n\t});\n});\n\nfunction _Time_here()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\tcallback(_Scheduler_succeed(\n\t\t\tA2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)\n\t\t));\n\t});\n}\n\n\nfunction _Time_getZoneName()\n{\n\treturn _Scheduler_binding(function(callback)\n\t{\n\t\ttry\n\t\t{\n\t\t\tvar name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\t}\n\t\tcatch (e)\n\t\t{\n\t\t\tvar name = $elm$time$Time$Offset(new Date().getTimezoneOffset());\n\t\t}\n\t\tcallback(_Scheduler_succeed(name));\n\t});\n}\n\n\n\nvar _Bitwise_and = F2(function(a, b)\n{\n\treturn a & b;\n});\n\nvar _Bitwise_or = F2(function(a, b)\n{\n\treturn a | b;\n});\n\nvar _Bitwise_xor = F2(function(a, b)\n{\n\treturn a ^ b;\n});\n\nfunction _Bitwise_complement(a)\n{\n\treturn ~a;\n};\n\nvar _Bitwise_shiftLeftBy = F2(function(offset, a)\n{\n\treturn a << offset;\n});\n\nvar _Bitwise_shiftRightBy = F2(function(offset, a)\n{\n\treturn a >> offset;\n});\n\nvar _Bitwise_shiftRightZfBy = F2(function(offset, a)\n{\n\treturn a >>> offset;\n});\nvar $elm$core$Basics$EQ = 1;\nvar $elm$core$Basics$GT = 2;\nvar $elm$core$Basics$LT = 0;\nvar $elm$core$List$cons = _List_cons;\nvar $elm$core$Dict$foldr = F3(\n\tfunction (func, acc, t) {\n\t\tfoldr:\n\t\twhile (true) {\n\t\t\tif (t.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = t.b;\n\t\t\t\tvar value = t.c;\n\t\t\t\tvar left = t.d;\n\t\t\t\tvar right = t.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldr, func, acc, right)),\n\t\t\t\t\t$temp$t = left;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tt = $temp$t;\n\t\t\t\tcontinue foldr;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$toList = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, list) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t_Utils_Tuple2(key, value),\n\t\t\t\t\tlist);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Dict$keys = function (dict) {\n\treturn A3(\n\t\t$elm$core$Dict$foldr,\n\t\tF3(\n\t\t\tfunction (key, value, keyList) {\n\t\t\t\treturn A2($elm$core$List$cons, key, keyList);\n\t\t\t}),\n\t\t_List_Nil,\n\t\tdict);\n};\nvar $elm$core$Set$toList = function (_v0) {\n\tvar dict = _v0;\n\treturn $elm$core$Dict$keys(dict);\n};\nvar $elm$core$Elm$JsArray$foldr = _JsArray_foldr;\nvar $elm$core$Array$foldr = F3(\n\tfunction (func, baseCase, _v0) {\n\t\tvar tree = _v0.c;\n\t\tvar tail = _v0.d;\n\t\tvar helper = F2(\n\t\t\tfunction (node, acc) {\n\t\t\t\tif (!node.$) {\n\t\t\t\t\tvar subTree = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);\n\t\t\t\t} else {\n\t\t\t\t\tvar values = node.a;\n\t\t\t\t\treturn A3($elm$core$Elm$JsArray$foldr, func, acc, values);\n\t\t\t\t}\n\t\t\t});\n\t\treturn A3(\n\t\t\t$elm$core$Elm$JsArray$foldr,\n\t\t\thelper,\n\t\t\tA3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),\n\t\t\ttree);\n\t});\nvar $elm$core$Array$toList = function (array) {\n\treturn A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);\n};\nvar $elm$core$Result$Err = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$json$Json$Decode$Failure = F2(\n\tfunction (a, b) {\n\t\treturn {$: 3, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Field = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$json$Json$Decode$Index = F2(\n\tfunction (a, b) {\n\t\treturn {$: 1, a: a, b: b};\n\t});\nvar $elm$core$Result$Ok = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$json$Json$Decode$OneOf = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $elm$core$Basics$False = 1;\nvar $elm$core$Basics$add = _Basics_add;\nvar $elm$core$Maybe$Just = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Maybe$Nothing = {$: 1};\nvar $elm$core$String$all = _String_all;\nvar $elm$core$Basics$and = _Basics_and;\nvar $elm$core$Basics$append = _Utils_append;\nvar $elm$json$Json$Encode$encode = _Json_encode;\nvar $elm$core$String$fromInt = _String_fromNumber;\nvar $elm$core$String$join = F2(\n\tfunction (sep, chunks) {\n\t\treturn A2(\n\t\t\t_String_join,\n\t\t\tsep,\n\t\t\t_List_toArray(chunks));\n\t});\nvar $elm$core$String$split = F2(\n\tfunction (sep, string) {\n\t\treturn _List_fromArray(\n\t\t\tA2(_String_split, sep, string));\n\t});\nvar $elm$json$Json$Decode$indent = function (str) {\n\treturn A2(\n\t\t$elm$core$String$join,\n\t\t'\\n    ',\n\t\tA2($elm$core$String$split, '\\n', str));\n};\nvar $elm$core$List$foldl = F3(\n\tfunction (func, acc, list) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (!list.b) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar x = list.a;\n\t\t\t\tvar xs = list.b;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A2(func, x, acc),\n\t\t\t\t\t$temp$list = xs;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$length = function (xs) {\n\treturn A3(\n\t\t$elm$core$List$foldl,\n\t\tF2(\n\t\t\tfunction (_v0, i) {\n\t\t\t\treturn i + 1;\n\t\t\t}),\n\t\t0,\n\t\txs);\n};\nvar $elm$core$List$map2 = _List_map2;\nvar $elm$core$Basics$le = _Utils_le;\nvar $elm$core$Basics$sub = _Basics_sub;\nvar $elm$core$List$rangeHelp = F3(\n\tfunction (lo, hi, list) {\n\t\trangeHelp:\n\t\twhile (true) {\n\t\t\tif (_Utils_cmp(lo, hi) < 1) {\n\t\t\t\tvar $temp$lo = lo,\n\t\t\t\t\t$temp$hi = hi - 1,\n\t\t\t\t\t$temp$list = A2($elm$core$List$cons, hi, list);\n\t\t\t\tlo = $temp$lo;\n\t\t\t\thi = $temp$hi;\n\t\t\t\tlist = $temp$list;\n\t\t\t\tcontinue rangeHelp;\n\t\t\t} else {\n\t\t\t\treturn list;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$range = F2(\n\tfunction (lo, hi) {\n\t\treturn A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);\n\t});\nvar $elm$core$List$indexedMap = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$map2,\n\t\t\tf,\n\t\t\tA2(\n\t\t\t\t$elm$core$List$range,\n\t\t\t\t0,\n\t\t\t\t$elm$core$List$length(xs) - 1),\n\t\t\txs);\n\t});\nvar $elm$core$Char$toCode = _Char_toCode;\nvar $elm$core$Char$isLower = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (97 <= code) && (code <= 122);\n};\nvar $elm$core$Char$isUpper = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 90) && (65 <= code);\n};\nvar $elm$core$Basics$or = _Basics_or;\nvar $elm$core$Char$isAlpha = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);\n};\nvar $elm$core$Char$isDigit = function (_char) {\n\tvar code = $elm$core$Char$toCode(_char);\n\treturn (code <= 57) && (48 <= code);\n};\nvar $elm$core$Char$isAlphaNum = function (_char) {\n\treturn $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));\n};\nvar $elm$core$List$reverse = function (list) {\n\treturn A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);\n};\nvar $elm$core$String$uncons = _String_uncons;\nvar $elm$json$Json$Decode$errorOneOf = F2(\n\tfunction (i, error) {\n\t\treturn '\\n\\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(\n\t\t\t$elm$json$Json$Decode$errorToString(error))));\n\t});\nvar $elm$json$Json$Decode$errorToString = function (error) {\n\treturn A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);\n};\nvar $elm$json$Json$Decode$errorToStringHelp = F2(\n\tfunction (error, context) {\n\t\terrorToStringHelp:\n\t\twhile (true) {\n\t\t\tswitch (error.$) {\n\t\t\t\tcase 0:\n\t\t\t\t\tvar f = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar isSimple = function () {\n\t\t\t\t\t\tvar _v1 = $elm$core$String$uncons(f);\n\t\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _v2 = _v1.a;\n\t\t\t\t\t\t\tvar _char = _v2.a;\n\t\t\t\t\t\t\tvar rest = _v2.b;\n\t\t\t\t\t\t\treturn $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\tvar fieldName = isSimple ? ('.' + f) : ('[\\'' + (f + '\\']'));\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, fieldName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 1:\n\t\t\t\t\tvar i = error.a;\n\t\t\t\t\tvar err = error.b;\n\t\t\t\t\tvar indexName = '[' + ($elm$core$String$fromInt(i) + ']');\n\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t$temp$context = A2($elm$core$List$cons, indexName, context);\n\t\t\t\t\terror = $temp$error;\n\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\tcase 2:\n\t\t\t\t\tvar errors = error.a;\n\t\t\t\t\tif (!errors.b) {\n\t\t\t\t\t\treturn 'Ran into a Json.Decode.oneOf with no possibilities' + function () {\n\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\treturn '!';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn ' at json' + A2(\n\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (!errors.b.b) {\n\t\t\t\t\t\t\tvar err = errors.a;\n\t\t\t\t\t\t\tvar $temp$error = err,\n\t\t\t\t\t\t\t\t$temp$context = context;\n\t\t\t\t\t\t\terror = $temp$error;\n\t\t\t\t\t\t\tcontext = $temp$context;\n\t\t\t\t\t\t\tcontinue errorToStringHelp;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar starter = function () {\n\t\t\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\t\t\treturn 'Json.Decode.oneOf';\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\treturn 'The Json.Decode.oneOf at json' + A2(\n\t\t\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t\t\t$elm$core$List$reverse(context));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}();\n\t\t\t\t\t\t\tvar introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(\n\t\t\t\t\t\t\t\t$elm$core$List$length(errors)) + ' ways:'));\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'\\n\\n',\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\t\t\t\tintroduction,\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tvar msg = error.a;\n\t\t\t\t\tvar json = error.b;\n\t\t\t\t\tvar introduction = function () {\n\t\t\t\t\t\tif (!context.b) {\n\t\t\t\t\t\t\treturn 'Problem with the given value:\\n\\n';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Problem with the value at json' + (A2(\n\t\t\t\t\t\t\t\t$elm$core$String$join,\n\t\t\t\t\t\t\t\t'',\n\t\t\t\t\t\t\t\t$elm$core$List$reverse(context)) + ':\\n\\n    ');\n\t\t\t\t\t\t}\n\t\t\t\t\t}();\n\t\t\t\t\treturn introduction + ($elm$json$Json$Decode$indent(\n\t\t\t\t\t\tA2($elm$json$Json$Encode$encode, 4, json)) + ('\\n\\n' + msg));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$branchFactor = 32;\nvar $elm$core$Array$Array_elm_builtin = F4(\n\tfunction (a, b, c, d) {\n\t\treturn {$: 0, a: a, b: b, c: c, d: d};\n\t});\nvar $elm$core$Elm$JsArray$empty = _JsArray_empty;\nvar $elm$core$Basics$ceiling = _Basics_ceiling;\nvar $elm$core$Basics$fdiv = _Basics_fdiv;\nvar $elm$core$Basics$logBase = F2(\n\tfunction (base, number) {\n\t\treturn _Basics_log(number) / _Basics_log(base);\n\t});\nvar $elm$core$Basics$toFloat = _Basics_toFloat;\nvar $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(\n\tA2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));\nvar $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);\nvar $elm$core$Elm$JsArray$initialize = _JsArray_initialize;\nvar $elm$core$Array$Leaf = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$core$Basics$apL = F2(\n\tfunction (f, x) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$apR = F2(\n\tfunction (x, f) {\n\t\treturn f(x);\n\t});\nvar $elm$core$Basics$eq = _Utils_equal;\nvar $elm$core$Basics$floor = _Basics_floor;\nvar $elm$core$Elm$JsArray$length = _JsArray_length;\nvar $elm$core$Basics$gt = _Utils_gt;\nvar $elm$core$Basics$max = F2(\n\tfunction (x, y) {\n\t\treturn (_Utils_cmp(x, y) > 0) ? x : y;\n\t});\nvar $elm$core$Basics$mul = _Basics_mul;\nvar $elm$core$Array$SubTree = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;\nvar $elm$core$Array$compressNodes = F2(\n\tfunction (nodes, acc) {\n\t\tcompressNodes:\n\t\twhile (true) {\n\t\t\tvar _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);\n\t\t\tvar node = _v0.a;\n\t\t\tvar remainingNodes = _v0.b;\n\t\t\tvar newAcc = A2(\n\t\t\t\t$elm$core$List$cons,\n\t\t\t\t$elm$core$Array$SubTree(node),\n\t\t\t\tacc);\n\t\t\tif (!remainingNodes.b) {\n\t\t\t\treturn $elm$core$List$reverse(newAcc);\n\t\t\t} else {\n\t\t\t\tvar $temp$nodes = remainingNodes,\n\t\t\t\t\t$temp$acc = newAcc;\n\t\t\t\tnodes = $temp$nodes;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tcontinue compressNodes;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Tuple$first = function (_v0) {\n\tvar x = _v0.a;\n\treturn x;\n};\nvar $elm$core$Array$treeFromBuilder = F2(\n\tfunction (nodeList, nodeListSize) {\n\t\ttreeFromBuilder:\n\t\twhile (true) {\n\t\t\tvar newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);\n\t\t\tif (newNodeSize === 1) {\n\t\t\t\treturn A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;\n\t\t\t} else {\n\t\t\t\tvar $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),\n\t\t\t\t\t$temp$nodeListSize = newNodeSize;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\tnodeListSize = $temp$nodeListSize;\n\t\t\t\tcontinue treeFromBuilder;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Array$builderToArray = F2(\n\tfunction (reverseNodeList, builder) {\n\t\tif (!builder.a) {\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.c),\n\t\t\t\t$elm$core$Array$shiftStep,\n\t\t\t\t$elm$core$Elm$JsArray$empty,\n\t\t\t\tbuilder.c);\n\t\t} else {\n\t\t\tvar treeLen = builder.a * $elm$core$Array$branchFactor;\n\t\t\tvar depth = $elm$core$Basics$floor(\n\t\t\t\tA2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));\n\t\t\tvar correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.d) : builder.d;\n\t\t\tvar tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.a);\n\t\t\treturn A4(\n\t\t\t\t$elm$core$Array$Array_elm_builtin,\n\t\t\t\t$elm$core$Elm$JsArray$length(builder.c) + treeLen,\n\t\t\t\tA2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),\n\t\t\t\ttree,\n\t\t\t\tbuilder.c);\n\t\t}\n\t});\nvar $elm$core$Basics$idiv = _Basics_idiv;\nvar $elm$core$Basics$lt = _Utils_lt;\nvar $elm$core$Array$initializeHelp = F5(\n\tfunction (fn, fromIndex, len, nodeList, tail) {\n\t\tinitializeHelp:\n\t\twhile (true) {\n\t\t\tif (fromIndex < 0) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Array$builderToArray,\n\t\t\t\t\tfalse,\n\t\t\t\t\t{d: nodeList, a: (len / $elm$core$Array$branchFactor) | 0, c: tail});\n\t\t\t} else {\n\t\t\t\tvar leaf = $elm$core$Array$Leaf(\n\t\t\t\t\tA3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));\n\t\t\t\tvar $temp$fn = fn,\n\t\t\t\t\t$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,\n\t\t\t\t\t$temp$len = len,\n\t\t\t\t\t$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),\n\t\t\t\t\t$temp$tail = tail;\n\t\t\t\tfn = $temp$fn;\n\t\t\t\tfromIndex = $temp$fromIndex;\n\t\t\t\tlen = $temp$len;\n\t\t\t\tnodeList = $temp$nodeList;\n\t\t\t\ttail = $temp$tail;\n\t\t\t\tcontinue initializeHelp;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Basics$remainderBy = _Basics_remainderBy;\nvar $elm$core$Array$initialize = F2(\n\tfunction (len, fn) {\n\t\tif (len <= 0) {\n\t\t\treturn $elm$core$Array$empty;\n\t\t} else {\n\t\t\tvar tailLen = len % $elm$core$Array$branchFactor;\n\t\t\tvar tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);\n\t\t\tvar initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;\n\t\t\treturn A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);\n\t\t}\n\t});\nvar $elm$core$Basics$True = 0;\nvar $elm$core$Result$isOk = function (result) {\n\tif (!result.$) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$json$Json$Decode$map = _Json_map1;\nvar $elm$json$Json$Decode$map2 = _Json_map2;\nvar $elm$json$Json$Decode$succeed = _Json_succeed;\nvar $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {\n\tswitch (handler.$) {\n\t\tcase 0:\n\t\t\treturn 0;\n\t\tcase 1:\n\t\t\treturn 1;\n\t\tcase 2:\n\t\t\treturn 2;\n\t\tdefault:\n\t\t\treturn 3;\n\t}\n};\nvar $elm$browser$Browser$External = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$browser$Browser$Internal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$core$Basics$identity = function (x) {\n\treturn x;\n};\nvar $elm$browser$Browser$Dom$NotFound = $elm$core$Basics$identity;\nvar $elm$url$Url$Http = 0;\nvar $elm$url$Url$Https = 1;\nvar $elm$url$Url$Url = F6(\n\tfunction (protocol, host, port_, path, query, fragment) {\n\t\treturn {an: fragment, ap: host, au: path, aw: port_, az: protocol, aA: query};\n\t});\nvar $elm$core$String$contains = _String_contains;\nvar $elm$core$String$length = _String_length;\nvar $elm$core$String$slice = _String_slice;\nvar $elm$core$String$dropLeft = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? string : A3(\n\t\t\t$elm$core$String$slice,\n\t\t\tn,\n\t\t\t$elm$core$String$length(string),\n\t\t\tstring);\n\t});\nvar $elm$core$String$indexes = _String_indexes;\nvar $elm$core$String$isEmpty = function (string) {\n\treturn string === '';\n};\nvar $elm$core$String$left = F2(\n\tfunction (n, string) {\n\t\treturn (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);\n\t});\nvar $elm$core$String$toInt = _String_toInt;\nvar $elm$url$Url$chompBeforePath = F5(\n\tfunction (protocol, path, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, ':', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\tA6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));\n\t\t\t} else {\n\t\t\t\tif (!_v0.b.b) {\n\t\t\t\t\tvar i = _v0.a;\n\t\t\t\t\tvar _v1 = $elm$core$String$toInt(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str));\n\t\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar port_ = _v1;\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(\n\t\t\t\t\t\t\tA6(\n\t\t\t\t\t\t\t\t$elm$url$Url$Url,\n\t\t\t\t\t\t\t\tprotocol,\n\t\t\t\t\t\t\t\tA2($elm$core$String$left, i, str),\n\t\t\t\t\t\t\t\tport_,\n\t\t\t\t\t\t\t\tpath,\n\t\t\t\t\t\t\t\tparams,\n\t\t\t\t\t\t\t\tfrag));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeQuery = F4(\n\tfunction (protocol, params, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '/', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$url$Url$chompBeforePath,\n\t\t\t\t\tprotocol,\n\t\t\t\t\tA2($elm$core$String$dropLeft, i, str),\n\t\t\t\t\tparams,\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompBeforeFragment = F3(\n\tfunction (protocol, frag, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '?', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A4(\n\t\t\t\t\t$elm$url$Url$chompBeforeQuery,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tfrag,\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$url$Url$chompAfterProtocol = F2(\n\tfunction (protocol, str) {\n\t\tif ($elm$core$String$isEmpty(str)) {\n\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t} else {\n\t\t\tvar _v0 = A2($elm$core$String$indexes, '#', str);\n\t\t\tif (!_v0.b) {\n\t\t\t\treturn A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);\n\t\t\t} else {\n\t\t\t\tvar i = _v0.a;\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$url$Url$chompBeforeFragment,\n\t\t\t\t\tprotocol,\n\t\t\t\t\t$elm$core$Maybe$Just(\n\t\t\t\t\t\tA2($elm$core$String$dropLeft, i + 1, str)),\n\t\t\t\t\tA2($elm$core$String$left, i, str));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$String$startsWith = _String_startsWith;\nvar $elm$url$Url$fromString = function (str) {\n\treturn A2($elm$core$String$startsWith, 'http://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t0,\n\t\tA2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(\n\t\t$elm$url$Url$chompAfterProtocol,\n\t\t1,\n\t\tA2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);\n};\nvar $elm$core$Basics$never = function (_v0) {\n\tnever:\n\twhile (true) {\n\t\tvar nvr = _v0;\n\t\tvar $temp$_v0 = nvr;\n\t\t_v0 = $temp$_v0;\n\t\tcontinue never;\n\t}\n};\nvar $elm$core$Task$Perform = $elm$core$Basics$identity;\nvar $elm$core$Task$succeed = _Scheduler_succeed;\nvar $elm$core$Task$init = $elm$core$Task$succeed(0);\nvar $elm$core$List$foldrHelper = F4(\n\tfunction (fn, acc, ctr, ls) {\n\t\tif (!ls.b) {\n\t\t\treturn acc;\n\t\t} else {\n\t\t\tvar a = ls.a;\n\t\t\tvar r1 = ls.b;\n\t\t\tif (!r1.b) {\n\t\t\t\treturn A2(fn, a, acc);\n\t\t\t} else {\n\t\t\t\tvar b = r1.a;\n\t\t\t\tvar r2 = r1.b;\n\t\t\t\tif (!r2.b) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\tfn,\n\t\t\t\t\t\ta,\n\t\t\t\t\t\tA2(fn, b, acc));\n\t\t\t\t} else {\n\t\t\t\t\tvar c = r2.a;\n\t\t\t\t\tvar r3 = r2.b;\n\t\t\t\t\tif (!r3.b) {\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(fn, c, acc)));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar d = r3.a;\n\t\t\t\t\t\tvar r4 = r3.b;\n\t\t\t\t\t\tvar res = (ctr > 500) ? A3(\n\t\t\t\t\t\t\t$elm$core$List$foldl,\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\tacc,\n\t\t\t\t\t\t\t$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);\n\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\ta,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\tb,\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t\tfn,\n\t\t\t\t\t\t\t\t\tc,\n\t\t\t\t\t\t\t\t\tA2(fn, d, res))));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$foldr = F3(\n\tfunction (fn, acc, ls) {\n\t\treturn A4($elm$core$List$foldrHelper, fn, acc, 0, ls);\n\t});\nvar $elm$core$List$map = F2(\n\tfunction (f, xs) {\n\t\treturn A3(\n\t\t\t$elm$core$List$foldr,\n\t\t\tF2(\n\t\t\t\tfunction (x, acc) {\n\t\t\t\t\treturn A2(\n\t\t\t\t\t\t$elm$core$List$cons,\n\t\t\t\t\t\tf(x),\n\t\t\t\t\t\tacc);\n\t\t\t\t}),\n\t\t\t_List_Nil,\n\t\t\txs);\n\t});\nvar $elm$core$Task$andThen = _Scheduler_andThen;\nvar $elm$core$Task$map = F2(\n\tfunction (func, taskA) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tfunc(a));\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$map2 = F3(\n\tfunction (func, taskA, taskB) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (a) {\n\t\t\t\treturn A2(\n\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\tfunction (b) {\n\t\t\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\t\t\tA2(func, a, b));\n\t\t\t\t\t},\n\t\t\t\t\ttaskB);\n\t\t\t},\n\t\t\ttaskA);\n\t});\nvar $elm$core$Task$sequence = function (tasks) {\n\treturn A3(\n\t\t$elm$core$List$foldr,\n\t\t$elm$core$Task$map2($elm$core$List$cons),\n\t\t$elm$core$Task$succeed(_List_Nil),\n\t\ttasks);\n};\nvar $elm$core$Platform$sendToApp = _Platform_sendToApp;\nvar $elm$core$Task$spawnCmd = F2(\n\tfunction (router, _v0) {\n\t\tvar task = _v0;\n\t\treturn _Scheduler_spawn(\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t$elm$core$Platform$sendToApp(router),\n\t\t\t\ttask));\n\t});\nvar $elm$core$Task$onEffects = F3(\n\tfunction (router, commands, state) {\n\t\treturn A2(\n\t\t\t$elm$core$Task$map,\n\t\t\tfunction (_v0) {\n\t\t\t\treturn 0;\n\t\t\t},\n\t\t\t$elm$core$Task$sequence(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t$elm$core$Task$spawnCmd(router),\n\t\t\t\t\tcommands)));\n\t});\nvar $elm$core$Task$onSelfMsg = F3(\n\tfunction (_v0, _v1, _v2) {\n\t\treturn $elm$core$Task$succeed(0);\n\t});\nvar $elm$core$Task$cmdMap = F2(\n\tfunction (tagger, _v0) {\n\t\tvar task = _v0;\n\t\treturn A2($elm$core$Task$map, tagger, task);\n\t});\n_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);\nvar $elm$core$Task$command = _Platform_leaf('Task');\nvar $elm$core$Task$perform = F2(\n\tfunction (toMessage, task) {\n\t\treturn $elm$core$Task$command(\n\t\t\tA2($elm$core$Task$map, toMessage, task));\n\t});\nvar $elm$browser$Browser$element = _Browser_element;\nvar $author$project$Main$MainPage = {$: 0};\nvar $elm$core$Platform$Cmd$batch = _Platform_batch;\nvar $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);\nvar $author$project$Main$init = _Utils_Tuple2(\n\t{T: 0, D: _List_Nil, p: '', f: $author$project$Main$MainPage},\n\t$elm$core$Platform$Cmd$none);\nvar $author$project$Main$GotCurrentTime = function (a) {\n\treturn {$: 9, a: a};\n};\nvar $elm$core$Basics$composeR = F3(\n\tfunction (f, g, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$time$Time$Every = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$time$Time$State = F2(\n\tfunction (taggers, processes) {\n\t\treturn {ay: processes, aG: taggers};\n\t});\nvar $elm$core$Dict$RBEmpty_elm_builtin = {$: -2};\nvar $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;\nvar $elm$time$Time$init = $elm$core$Task$succeed(\n\tA2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));\nvar $elm$core$Basics$compare = _Utils_compare;\nvar $elm$core$Dict$get = F2(\n\tfunction (targetKey, dict) {\n\t\tget:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn $elm$core$Maybe$Nothing;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar _v1 = A2($elm$core$Basics$compare, targetKey, key);\n\t\t\t\tswitch (_v1) {\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = left;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\treturn $elm$core$Maybe$Just(value);\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvar $temp$targetKey = targetKey,\n\t\t\t\t\t\t\t$temp$dict = right;\n\t\t\t\t\t\ttargetKey = $temp$targetKey;\n\t\t\t\t\t\tdict = $temp$dict;\n\t\t\t\t\t\tcontinue get;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$Black = 1;\nvar $elm$core$Dict$RBNode_elm_builtin = F5(\n\tfunction (a, b, c, d, e) {\n\t\treturn {$: -1, a: a, b: b, c: c, d: d, e: e};\n\t});\nvar $elm$core$Dict$Red = 0;\nvar $elm$core$Dict$balance = F5(\n\tfunction (color, key, value, left, right) {\n\t\tif ((right.$ === -1) && (!right.a)) {\n\t\t\tvar _v1 = right.a;\n\t\t\tvar rK = right.b;\n\t\t\tvar rV = right.c;\n\t\t\tvar rLeft = right.d;\n\t\t\tvar rRight = right.e;\n\t\t\tif ((left.$ === -1) && (!left.a)) {\n\t\t\t\tvar _v3 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar lLeft = left.d;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, lK, lV, lLeft, lRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, rK, rV, rLeft, rRight));\n\t\t\t} else {\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\tcolor,\n\t\t\t\t\trK,\n\t\t\t\t\trV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, left, rLeft),\n\t\t\t\t\trRight);\n\t\t\t}\n\t\t} else {\n\t\t\tif ((((left.$ === -1) && (!left.a)) && (left.d.$ === -1)) && (!left.d.a)) {\n\t\t\t\tvar _v5 = left.a;\n\t\t\t\tvar lK = left.b;\n\t\t\t\tvar lV = left.c;\n\t\t\t\tvar _v6 = left.d;\n\t\t\t\tvar _v7 = _v6.a;\n\t\t\t\tvar llK = _v6.b;\n\t\t\t\tvar llV = _v6.c;\n\t\t\t\tvar llLeft = _v6.d;\n\t\t\t\tvar llRight = _v6.e;\n\t\t\t\tvar lRight = left.e;\n\t\t\t\treturn A5(\n\t\t\t\t\t$elm$core$Dict$RBNode_elm_builtin,\n\t\t\t\t\t0,\n\t\t\t\t\tlK,\n\t\t\t\t\tlV,\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, llK, llV, llLeft, llRight),\n\t\t\t\t\tA5($elm$core$Dict$RBNode_elm_builtin, 1, key, value, lRight, right));\n\t\t\t} else {\n\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insertHelp = F3(\n\tfunction (key, value, dict) {\n\t\tif (dict.$ === -2) {\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 0, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);\n\t\t} else {\n\t\t\tvar nColor = dict.a;\n\t\t\tvar nKey = dict.b;\n\t\t\tvar nValue = dict.c;\n\t\t\tvar nLeft = dict.d;\n\t\t\tvar nRight = dict.e;\n\t\t\tvar _v1 = A2($elm$core$Basics$compare, key, nKey);\n\t\t\tswitch (_v1) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nLeft),\n\t\t\t\t\t\tnRight);\n\t\t\t\tcase 1:\n\t\t\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);\n\t\t\t\tdefault:\n\t\t\t\t\treturn A5(\n\t\t\t\t\t\t$elm$core$Dict$balance,\n\t\t\t\t\t\tnColor,\n\t\t\t\t\t\tnKey,\n\t\t\t\t\t\tnValue,\n\t\t\t\t\t\tnLeft,\n\t\t\t\t\t\tA3($elm$core$Dict$insertHelp, key, value, nRight));\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$insert = F3(\n\tfunction (key, value, dict) {\n\t\tvar _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);\n\t\tif ((_v0.$ === -1) && (!_v0.a)) {\n\t\t\tvar _v1 = _v0.a;\n\t\t\tvar k = _v0.b;\n\t\t\tvar v = _v0.c;\n\t\t\tvar l = _v0.d;\n\t\t\tvar r = _v0.e;\n\t\t\treturn A5($elm$core$Dict$RBNode_elm_builtin, 1, k, v, l, r);\n\t\t} else {\n\t\t\tvar x = _v0;\n\t\t\treturn x;\n\t\t}\n\t});\nvar $elm$time$Time$addMySub = F2(\n\tfunction (_v0, state) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\tvar _v1 = A2($elm$core$Dict$get, interval, state);\n\t\tif (_v1.$ === 1) {\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[tagger]),\n\t\t\t\tstate);\n\t\t} else {\n\t\t\tvar taggers = _v1.a;\n\t\t\treturn A3(\n\t\t\t\t$elm$core$Dict$insert,\n\t\t\t\tinterval,\n\t\t\t\tA2($elm$core$List$cons, tagger, taggers),\n\t\t\t\tstate);\n\t\t}\n\t});\nvar $elm$core$Process$kill = _Scheduler_kill;\nvar $elm$core$Dict$foldl = F3(\n\tfunction (func, acc, dict) {\n\t\tfoldl:\n\t\twhile (true) {\n\t\t\tif (dict.$ === -2) {\n\t\t\t\treturn acc;\n\t\t\t} else {\n\t\t\t\tvar key = dict.b;\n\t\t\t\tvar value = dict.c;\n\t\t\t\tvar left = dict.d;\n\t\t\t\tvar right = dict.e;\n\t\t\t\tvar $temp$func = func,\n\t\t\t\t\t$temp$acc = A3(\n\t\t\t\t\tfunc,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue,\n\t\t\t\t\tA3($elm$core$Dict$foldl, func, acc, left)),\n\t\t\t\t\t$temp$dict = right;\n\t\t\t\tfunc = $temp$func;\n\t\t\t\tacc = $temp$acc;\n\t\t\t\tdict = $temp$dict;\n\t\t\t\tcontinue foldl;\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$Dict$merge = F6(\n\tfunction (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {\n\t\tvar stepState = F3(\n\t\t\tfunction (rKey, rValue, _v0) {\n\t\t\t\tstepState:\n\t\t\t\twhile (true) {\n\t\t\t\t\tvar list = _v0.a;\n\t\t\t\t\tvar result = _v0.b;\n\t\t\t\t\tif (!list.b) {\n\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar _v2 = list.a;\n\t\t\t\t\t\tvar lKey = _v2.a;\n\t\t\t\t\t\tvar lValue = _v2.b;\n\t\t\t\t\t\tvar rest = list.b;\n\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) < 0) {\n\t\t\t\t\t\t\tvar $temp$rKey = rKey,\n\t\t\t\t\t\t\t\t$temp$rValue = rValue,\n\t\t\t\t\t\t\t\t$temp$_v0 = _Utils_Tuple2(\n\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\tA3(leftStep, lKey, lValue, result));\n\t\t\t\t\t\t\trKey = $temp$rKey;\n\t\t\t\t\t\t\trValue = $temp$rValue;\n\t\t\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\t\t\tcontinue stepState;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Utils_cmp(lKey, rKey) > 0) {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\tlist,\n\t\t\t\t\t\t\t\t\tA3(rightStep, rKey, rValue, result));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t\t\t\trest,\n\t\t\t\t\t\t\t\t\tA4(bothStep, lKey, lValue, rValue, result));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\tvar _v3 = A3(\n\t\t\t$elm$core$Dict$foldl,\n\t\t\tstepState,\n\t\t\t_Utils_Tuple2(\n\t\t\t\t$elm$core$Dict$toList(leftDict),\n\t\t\t\tinitialResult),\n\t\t\trightDict);\n\t\tvar leftovers = _v3.a;\n\t\tvar intermediateResult = _v3.b;\n\t\treturn A3(\n\t\t\t$elm$core$List$foldl,\n\t\t\tF2(\n\t\t\t\tfunction (_v4, result) {\n\t\t\t\t\tvar k = _v4.a;\n\t\t\t\t\tvar v = _v4.b;\n\t\t\t\t\treturn A3(leftStep, k, v, result);\n\t\t\t\t}),\n\t\t\tintermediateResult,\n\t\t\tleftovers);\n\t});\nvar $elm$core$Platform$sendToSelf = _Platform_sendToSelf;\nvar $elm$time$Time$Name = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$time$Time$Offset = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$time$Time$Zone = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$time$Time$customZone = $elm$time$Time$Zone;\nvar $elm$time$Time$setInterval = _Time_setInterval;\nvar $elm$core$Process$spawn = _Scheduler_spawn;\nvar $elm$time$Time$spawnHelp = F3(\n\tfunction (router, intervals, processes) {\n\t\tif (!intervals.b) {\n\t\t\treturn $elm$core$Task$succeed(processes);\n\t\t} else {\n\t\t\tvar interval = intervals.a;\n\t\t\tvar rest = intervals.b;\n\t\t\tvar spawnTimer = $elm$core$Process$spawn(\n\t\t\t\tA2(\n\t\t\t\t\t$elm$time$Time$setInterval,\n\t\t\t\t\tinterval,\n\t\t\t\t\tA2($elm$core$Platform$sendToSelf, router, interval)));\n\t\t\tvar spawnRest = function (id) {\n\t\t\t\treturn A3(\n\t\t\t\t\t$elm$time$Time$spawnHelp,\n\t\t\t\t\trouter,\n\t\t\t\t\trest,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, processes));\n\t\t\t};\n\t\t\treturn A2($elm$core$Task$andThen, spawnRest, spawnTimer);\n\t\t}\n\t});\nvar $elm$time$Time$onEffects = F3(\n\tfunction (router, subs, _v0) {\n\t\tvar processes = _v0.ay;\n\t\tvar rightStep = F3(\n\t\t\tfunction (_v6, id, _v7) {\n\t\t\t\tvar spawns = _v7.a;\n\t\t\t\tvar existing = _v7.b;\n\t\t\t\tvar kills = _v7.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\texisting,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\t\t\tfunction (_v5) {\n\t\t\t\t\t\t\treturn kills;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t$elm$core$Process$kill(id)));\n\t\t\t});\n\t\tvar newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);\n\t\tvar leftStep = F3(\n\t\t\tfunction (interval, taggers, _v4) {\n\t\t\t\tvar spawns = _v4.a;\n\t\t\t\tvar existing = _v4.b;\n\t\t\t\tvar kills = _v4.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tA2($elm$core$List$cons, interval, spawns),\n\t\t\t\t\texisting,\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar bothStep = F4(\n\t\t\tfunction (interval, taggers, id, _v3) {\n\t\t\t\tvar spawns = _v3.a;\n\t\t\t\tvar existing = _v3.b;\n\t\t\t\tvar kills = _v3.c;\n\t\t\t\treturn _Utils_Tuple3(\n\t\t\t\t\tspawns,\n\t\t\t\t\tA3($elm$core$Dict$insert, interval, id, existing),\n\t\t\t\t\tkills);\n\t\t\t});\n\t\tvar _v1 = A6(\n\t\t\t$elm$core$Dict$merge,\n\t\t\tleftStep,\n\t\t\tbothStep,\n\t\t\trightStep,\n\t\t\tnewTaggers,\n\t\t\tprocesses,\n\t\t\t_Utils_Tuple3(\n\t\t\t\t_List_Nil,\n\t\t\t\t$elm$core$Dict$empty,\n\t\t\t\t$elm$core$Task$succeed(0)));\n\t\tvar spawnList = _v1.a;\n\t\tvar existingDict = _v1.b;\n\t\tvar killTask = _v1.c;\n\t\treturn A2(\n\t\t\t$elm$core$Task$andThen,\n\t\t\tfunction (newProcesses) {\n\t\t\t\treturn $elm$core$Task$succeed(\n\t\t\t\t\tA2($elm$time$Time$State, newTaggers, newProcesses));\n\t\t\t},\n\t\t\tA2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);\n\t\t\t\t},\n\t\t\t\tkillTask));\n\t});\nvar $elm$time$Time$Posix = $elm$core$Basics$identity;\nvar $elm$time$Time$millisToPosix = $elm$core$Basics$identity;\nvar $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);\nvar $elm$time$Time$onSelfMsg = F3(\n\tfunction (router, interval, state) {\n\t\tvar _v0 = A2($elm$core$Dict$get, interval, state.aG);\n\t\tif (_v0.$ === 1) {\n\t\t\treturn $elm$core$Task$succeed(state);\n\t\t} else {\n\t\t\tvar taggers = _v0.a;\n\t\t\tvar tellTaggers = function (time) {\n\t\t\t\treturn $elm$core$Task$sequence(\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$List$map,\n\t\t\t\t\t\tfunction (tagger) {\n\t\t\t\t\t\t\treturn A2(\n\t\t\t\t\t\t\t\t$elm$core$Platform$sendToApp,\n\t\t\t\t\t\t\t\trouter,\n\t\t\t\t\t\t\t\ttagger(time));\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaggers));\n\t\t\t};\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v1) {\n\t\t\t\t\treturn $elm$core$Task$succeed(state);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));\n\t\t}\n\t});\nvar $elm$core$Basics$composeL = F3(\n\tfunction (g, f, x) {\n\t\treturn g(\n\t\t\tf(x));\n\t});\nvar $elm$time$Time$subMap = F2(\n\tfunction (f, _v0) {\n\t\tvar interval = _v0.a;\n\t\tvar tagger = _v0.b;\n\t\treturn A2(\n\t\t\t$elm$time$Time$Every,\n\t\t\tinterval,\n\t\t\tA2($elm$core$Basics$composeL, f, tagger));\n\t});\n_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);\nvar $elm$time$Time$subscription = _Platform_leaf('Time');\nvar $elm$time$Time$every = F2(\n\tfunction (interval, tagger) {\n\t\treturn $elm$time$Time$subscription(\n\t\t\tA2($elm$time$Time$Every, interval, tagger));\n\t});\nvar $elm$time$Time$posixToMillis = function (_v0) {\n\tvar millis = _v0;\n\treturn millis;\n};\nvar $author$project$Main$subscriptions = function (_v0) {\n\treturn A2(\n\t\t$elm$time$Time$every,\n\t\t500,\n\t\tA2(\n\t\t\t$elm$core$Basics$composeR,\n\t\t\t$elm$time$Time$posixToMillis,\n\t\t\tA2(\n\t\t\t\t$elm$core$Basics$composeR,\n\t\t\t\tfunction (millis) {\n\t\t\t\t\treturn (millis / 1000) | 0;\n\t\t\t\t},\n\t\t\t\t$author$project$Main$GotCurrentTime)));\n};\nvar $author$project$Main$EndTimeGenerated = function (a) {\n\treturn {$: 4, a: a};\n};\nvar $author$project$Main$FirstQuestionGenerated = F2(\n\tfunction (a, b) {\n\t\treturn {$: 2, a: a, b: b};\n\t});\nvar $author$project$Main$GamePage = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $author$project$Main$HiscoreEntryPage = function (a) {\n\treturn {$: 2, a: a};\n};\nvar $author$project$Main$QuestionGenerated = function (a) {\n\treturn {$: 3, a: a};\n};\nvar $author$project$Main$StartTimeGenerated = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $author$project$Main$Add = 0;\nvar $author$project$Main$Question = F3(\n\tfunction (first, second, operator) {\n\t\treturn {_: first, ac: operator, ae: second};\n\t});\nvar $author$project$Main$Subtract = 1;\nvar $elm$random$Random$Generate = $elm$core$Basics$identity;\nvar $elm$random$Random$Seed = F2(\n\tfunction (a, b) {\n\t\treturn {$: 0, a: a, b: b};\n\t});\nvar $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;\nvar $elm$random$Random$next = function (_v0) {\n\tvar state0 = _v0.a;\n\tvar incr = _v0.b;\n\treturn A2($elm$random$Random$Seed, ((state0 * 1664525) + incr) >>> 0, incr);\n};\nvar $elm$random$Random$initialSeed = function (x) {\n\tvar _v0 = $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, 0, 1013904223));\n\tvar state1 = _v0.a;\n\tvar incr = _v0.b;\n\tvar state2 = (state1 + x) >>> 0;\n\treturn $elm$random$Random$next(\n\t\tA2($elm$random$Random$Seed, state2, incr));\n};\nvar $elm$random$Random$init = A2(\n\t$elm$core$Task$andThen,\n\tfunction (time) {\n\t\treturn $elm$core$Task$succeed(\n\t\t\t$elm$random$Random$initialSeed(\n\t\t\t\t$elm$time$Time$posixToMillis(time)));\n\t},\n\t$elm$time$Time$now);\nvar $elm$random$Random$step = F2(\n\tfunction (_v0, seed) {\n\t\tvar generator = _v0;\n\t\treturn generator(seed);\n\t});\nvar $elm$random$Random$onEffects = F3(\n\tfunction (router, commands, seed) {\n\t\tif (!commands.b) {\n\t\t\treturn $elm$core$Task$succeed(seed);\n\t\t} else {\n\t\t\tvar generator = commands.a;\n\t\t\tvar rest = commands.b;\n\t\t\tvar _v1 = A2($elm$random$Random$step, generator, seed);\n\t\t\tvar value = _v1.a;\n\t\t\tvar newSeed = _v1.b;\n\t\t\treturn A2(\n\t\t\t\t$elm$core$Task$andThen,\n\t\t\t\tfunction (_v2) {\n\t\t\t\t\treturn A3($elm$random$Random$onEffects, router, rest, newSeed);\n\t\t\t\t},\n\t\t\t\tA2($elm$core$Platform$sendToApp, router, value));\n\t\t}\n\t});\nvar $elm$random$Random$onSelfMsg = F3(\n\tfunction (_v0, _v1, seed) {\n\t\treturn $elm$core$Task$succeed(seed);\n\t});\nvar $elm$random$Random$Generator = $elm$core$Basics$identity;\nvar $elm$random$Random$map = F2(\n\tfunction (func, _v0) {\n\t\tvar genA = _v0;\n\t\treturn function (seed0) {\n\t\t\tvar _v1 = genA(seed0);\n\t\t\tvar a = _v1.a;\n\t\t\tvar seed1 = _v1.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tfunc(a),\n\t\t\t\tseed1);\n\t\t};\n\t});\nvar $elm$random$Random$cmdMap = F2(\n\tfunction (func, _v0) {\n\t\tvar generator = _v0;\n\t\treturn A2($elm$random$Random$map, func, generator);\n\t});\n_Platform_effectManagers['Random'] = _Platform_createManager($elm$random$Random$init, $elm$random$Random$onEffects, $elm$random$Random$onSelfMsg, $elm$random$Random$cmdMap);\nvar $elm$random$Random$command = _Platform_leaf('Random');\nvar $elm$random$Random$generate = F2(\n\tfunction (tagger, generator) {\n\t\treturn $elm$random$Random$command(\n\t\t\tA2($elm$random$Random$map, tagger, generator));\n\t});\nvar $elm$core$Bitwise$and = _Bitwise_and;\nvar $elm$core$Basics$negate = function (n) {\n\treturn -n;\n};\nvar $elm$core$Bitwise$xor = _Bitwise_xor;\nvar $elm$random$Random$peel = function (_v0) {\n\tvar state = _v0.a;\n\tvar word = (state ^ (state >>> ((state >>> 28) + 4))) * 277803737;\n\treturn ((word >>> 22) ^ word) >>> 0;\n};\nvar $elm$random$Random$int = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar _v0 = (_Utils_cmp(a, b) < 0) ? _Utils_Tuple2(a, b) : _Utils_Tuple2(b, a);\n\t\t\tvar lo = _v0.a;\n\t\t\tvar hi = _v0.b;\n\t\t\tvar range = (hi - lo) + 1;\n\t\t\tif (!((range - 1) & range)) {\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t(((range - 1) & $elm$random$Random$peel(seed0)) >>> 0) + lo,\n\t\t\t\t\t$elm$random$Random$next(seed0));\n\t\t\t} else {\n\t\t\t\tvar threshhold = (((-range) >>> 0) % range) >>> 0;\n\t\t\t\tvar accountForBias = function (seed) {\n\t\t\t\t\taccountForBias:\n\t\t\t\t\twhile (true) {\n\t\t\t\t\t\tvar x = $elm$random$Random$peel(seed);\n\t\t\t\t\t\tvar seedN = $elm$random$Random$next(seed);\n\t\t\t\t\t\tif (_Utils_cmp(x, threshhold) < 0) {\n\t\t\t\t\t\t\tvar $temp$seed = seedN;\n\t\t\t\t\t\t\tseed = $temp$seed;\n\t\t\t\t\t\t\tcontinue accountForBias;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn _Utils_Tuple2((x % range) + lo, seedN);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\treturn accountForBias(seed0);\n\t\t\t}\n\t\t};\n\t});\nvar $elm$random$Random$map3 = F4(\n\tfunction (func, _v0, _v1, _v2) {\n\t\tvar genA = _v0;\n\t\tvar genB = _v1;\n\t\tvar genC = _v2;\n\t\treturn function (seed0) {\n\t\t\tvar _v3 = genA(seed0);\n\t\t\tvar a = _v3.a;\n\t\t\tvar seed1 = _v3.b;\n\t\t\tvar _v4 = genB(seed1);\n\t\t\tvar b = _v4.a;\n\t\t\tvar seed2 = _v4.b;\n\t\t\tvar _v5 = genC(seed2);\n\t\t\tvar c = _v5.a;\n\t\t\tvar seed3 = _v5.b;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tA3(func, a, b, c),\n\t\t\t\tseed3);\n\t\t};\n\t});\nvar $elm$random$Random$addOne = function (value) {\n\treturn _Utils_Tuple2(1, value);\n};\nvar $elm$core$Basics$abs = function (n) {\n\treturn (n < 0) ? (-n) : n;\n};\nvar $elm$random$Random$float = F2(\n\tfunction (a, b) {\n\t\treturn function (seed0) {\n\t\t\tvar seed1 = $elm$random$Random$next(seed0);\n\t\t\tvar range = $elm$core$Basics$abs(b - a);\n\t\t\tvar n1 = $elm$random$Random$peel(seed1);\n\t\t\tvar n0 = $elm$random$Random$peel(seed0);\n\t\t\tvar lo = (134217727 & n1) * 1.0;\n\t\t\tvar hi = (67108863 & n0) * 1.0;\n\t\t\tvar val = ((hi * 134217728.0) + lo) / 9007199254740992.0;\n\t\t\tvar scaled = (val * range) + a;\n\t\t\treturn _Utils_Tuple2(\n\t\t\t\tscaled,\n\t\t\t\t$elm$random$Random$next(seed1));\n\t\t};\n\t});\nvar $elm$random$Random$getByWeight = F3(\n\tfunction (_v0, others, countdown) {\n\t\tgetByWeight:\n\t\twhile (true) {\n\t\t\tvar weight = _v0.a;\n\t\t\tvar value = _v0.b;\n\t\t\tif (!others.b) {\n\t\t\t\treturn value;\n\t\t\t} else {\n\t\t\t\tvar second = others.a;\n\t\t\t\tvar otherOthers = others.b;\n\t\t\t\tif (_Utils_cmp(\n\t\t\t\t\tcountdown,\n\t\t\t\t\t$elm$core$Basics$abs(weight)) < 1) {\n\t\t\t\t\treturn value;\n\t\t\t\t} else {\n\t\t\t\t\tvar $temp$_v0 = second,\n\t\t\t\t\t\t$temp$others = otherOthers,\n\t\t\t\t\t\t$temp$countdown = countdown - $elm$core$Basics$abs(weight);\n\t\t\t\t\t_v0 = $temp$_v0;\n\t\t\t\t\tothers = $temp$others;\n\t\t\t\t\tcountdown = $temp$countdown;\n\t\t\t\t\tcontinue getByWeight;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\nvar $elm$core$List$sum = function (numbers) {\n\treturn A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);\n};\nvar $elm$random$Random$weighted = F2(\n\tfunction (first, others) {\n\t\tvar normalize = function (_v0) {\n\t\t\tvar weight = _v0.a;\n\t\t\treturn $elm$core$Basics$abs(weight);\n\t\t};\n\t\tvar total = normalize(first) + $elm$core$List$sum(\n\t\t\tA2($elm$core$List$map, normalize, others));\n\t\treturn A2(\n\t\t\t$elm$random$Random$map,\n\t\t\tA2($elm$random$Random$getByWeight, first, others),\n\t\t\tA2($elm$random$Random$float, 0, total));\n\t});\nvar $elm$random$Random$uniform = F2(\n\tfunction (value, valueList) {\n\t\treturn A2(\n\t\t\t$elm$random$Random$weighted,\n\t\t\t$elm$random$Random$addOne(value),\n\t\t\tA2($elm$core$List$map, $elm$random$Random$addOne, valueList));\n\t});\nvar $author$project$Main$generateQuestion = function (toMsg) {\n\treturn A2(\n\t\t$elm$random$Random$generate,\n\t\ttoMsg,\n\t\tA4(\n\t\t\t$elm$random$Random$map3,\n\t\t\t$author$project$Main$Question,\n\t\t\tA2($elm$random$Random$int, 1, 20),\n\t\t\tA2($elm$random$Random$int, 1, 20),\n\t\t\tA2(\n\t\t\t\t$elm$random$Random$uniform,\n\t\t\t\t0,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[1]))));\n};\nvar $author$project$Main$operatorFunction = function (operator) {\n\tif (!operator) {\n\t\treturn $elm$core$Basics$add;\n\t} else {\n\t\treturn $elm$core$Basics$sub;\n\t}\n};\nvar $elm$core$List$sortBy = _List_sortBy;\nvar $author$project$Main$update = F2(\n\tfunction (msg, model) {\n\t\tswitch (msg.$) {\n\t\t\tcase 0:\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$core$Task$perform,\n\t\t\t\t\t\tA2($elm$core$Basics$composeR, $elm$time$Time$posixToMillis, $author$project$Main$StartTimeGenerated),\n\t\t\t\t\t\t$elm$time$Time$now));\n\t\t\tcase 1:\n\t\t\t\tvar startTime = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\tmodel,\n\t\t\t\t\t$author$project$Main$generateQuestion(\n\t\t\t\t\t\t$author$project$Main$FirstQuestionGenerated((startTime / 1000) | 0)));\n\t\t\tcase 2:\n\t\t\t\tvar startTime = msg.a;\n\t\t\t\tvar question = msg.b;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tf: $author$project$Main$GamePage(\n\t\t\t\t\t\t\t\t{A: '', V: startTime, q: question, F: 0})\n\t\t\t\t\t\t}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\tcase 3:\n\t\t\t\tvar question = msg.a;\n\t\t\t\tvar _v1 = model.f;\n\t\t\t\tif (_v1.$ === 1) {\n\t\t\t\t\tvar gameInfo = _v1.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tf: $author$project$Main$GamePage(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tgameInfo,\n\t\t\t\t\t\t\t\t\t\t{q: question}))\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 5:\n\t\t\t\tvar answerString = msg.a;\n\t\t\t\tvar _v2 = model.f;\n\t\t\t\tif (_v2.$ === 1) {\n\t\t\t\t\tvar gameInfo = _v2.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tf: $author$project$Main$GamePage(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\tgameInfo,\n\t\t\t\t\t\t\t\t\t\t{A: answerString}))\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 6:\n\t\t\t\tvar _v3 = model.f;\n\t\t\t\tif (_v3.$ === 1) {\n\t\t\t\t\tvar gameInfo = _v3.a;\n\t\t\t\t\tvar _v4 = $elm$core$String$toInt(gameInfo.A);\n\t\t\t\t\tif (!_v4.$) {\n\t\t\t\t\t\tvar answer = _v4.a;\n\t\t\t\t\t\treturn _Utils_eq(\n\t\t\t\t\t\t\tA3($author$project$Main$operatorFunction, gameInfo.q.ac, gameInfo.q._, gameInfo.q.ae),\n\t\t\t\t\t\t\tanswer) ? (((gameInfo.F + 1) === 5) ? _Utils_Tuple2(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$core$Task$perform,\n\t\t\t\t\t\t\t\tA2($elm$core$Basics$composeR, $elm$time$Time$posixToMillis, $author$project$Main$EndTimeGenerated),\n\t\t\t\t\t\t\t\t$elm$time$Time$now)) : _Utils_Tuple2(\n\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tf: $author$project$Main$GamePage(\n\t\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\t\tgameInfo,\n\t\t\t\t\t\t\t\t\t\t\t{A: '', F: gameInfo.F + 1}))\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t$author$project$Main$generateQuestion($author$project$Main$QuestionGenerated))) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 4:\n\t\t\t\tvar endTime = msg.a;\n\t\t\t\tvar _v5 = model.f;\n\t\t\t\tif (_v5.$ === 1) {\n\t\t\t\t\tvar gameInfo = _v5.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tf: $author$project$Main$HiscoreEntryPage(\n\t\t\t\t\t\t\t\t\t{p: model.p, Q: ((endTime / 1000) | 0) - gameInfo.V})\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 7:\n\t\t\t\tvar name = msg.a;\n\t\t\t\tvar _v6 = model.f;\n\t\t\t\tif (_v6.$ === 2) {\n\t\t\t\t\tvar hiscore = _v6.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tp: name,\n\t\t\t\t\t\t\t\tf: $author$project$Main$HiscoreEntryPage(\n\t\t\t\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\t\t\t\thiscore,\n\t\t\t\t\t\t\t\t\t\t{p: name}))\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tcase 8:\n\t\t\t\tvar _v7 = model.f;\n\t\t\t\tif (_v7.$ === 2) {\n\t\t\t\t\tvar hiscore = _v7.a;\n\t\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tD: A2(\n\t\t\t\t\t\t\t\t\t$elm$core$List$sortBy,\n\t\t\t\t\t\t\t\t\tfunction ($) {\n\t\t\t\t\t\t\t\t\t\treturn $.Q;\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\tA2($elm$core$List$cons, hiscore, model.D)),\n\t\t\t\t\t\t\t\tf: $author$project$Main$MainPage\n\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t\t\t} else {\n\t\t\t\t\treturn _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);\n\t\t\t\t}\n\t\t\tdefault:\n\t\t\t\tvar currentTime = msg.a;\n\t\t\t\treturn _Utils_Tuple2(\n\t\t\t\t\t_Utils_update(\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\t{T: currentTime}),\n\t\t\t\t\t$elm$core$Platform$Cmd$none);\n\t\t}\n\t});\nvar $author$project$Main$AnswerInputChanged = function (a) {\n\treturn {$: 5, a: a};\n};\nvar $author$project$Main$HiscoreNameInputChanged = function (a) {\n\treturn {$: 7, a: a};\n};\nvar $author$project$Main$HiscoreSubmitNameButtonClicked = {$: 8};\nvar $author$project$Main$StartGameButtonClicked = {$: 0};\nvar $author$project$Main$SubmitAnswerButtonClicked = {$: 6};\nvar $elm$html$Html$button = _VirtualDom_node('button');\nvar $elm$json$Json$Encode$string = _Json_wrap;\nvar $elm$html$Html$Attributes$stringProperty = F2(\n\tfunction (key, string) {\n\t\treturn A2(\n\t\t\t_VirtualDom_property,\n\t\t\tkey,\n\t\t\t$elm$json$Json$Encode$string(string));\n\t});\nvar $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');\nvar $elm$html$Html$div = _VirtualDom_node('div');\nvar $elm$html$Html$h1 = _VirtualDom_node('h1');\nvar $elm$html$Html$h2 = _VirtualDom_node('h2');\nvar $elm$html$Html$input = _VirtualDom_node('input');\nvar $elm$core$List$isEmpty = function (xs) {\n\tif (!xs.b) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n};\nvar $elm$html$Html$label = _VirtualDom_node('label');\nvar $elm$html$Html$ol = _VirtualDom_node('ol');\nvar $elm$virtual_dom$VirtualDom$Normal = function (a) {\n\treturn {$: 0, a: a};\n};\nvar $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;\nvar $elm$html$Html$Events$on = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$Normal(decoder));\n\t});\nvar $elm$html$Html$Events$onClick = function (msg) {\n\treturn A2(\n\t\t$elm$html$Html$Events$on,\n\t\t'click',\n\t\t$elm$json$Json$Decode$succeed(msg));\n};\nvar $elm$html$Html$Events$alwaysStop = function (x) {\n\treturn _Utils_Tuple2(x, true);\n};\nvar $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {\n\treturn {$: 1, a: a};\n};\nvar $elm$html$Html$Events$stopPropagationOn = F2(\n\tfunction (event, decoder) {\n\t\treturn A2(\n\t\t\t$elm$virtual_dom$VirtualDom$on,\n\t\t\tevent,\n\t\t\t$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));\n\t});\nvar $elm$json$Json$Decode$field = _Json_decodeField;\nvar $elm$json$Json$Decode$at = F2(\n\tfunction (fields, decoder) {\n\t\treturn A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);\n\t});\nvar $elm$json$Json$Decode$string = _Json_decodeString;\nvar $elm$html$Html$Events$targetValue = A2(\n\t$elm$json$Json$Decode$at,\n\t_List_fromArray(\n\t\t['target', 'value']),\n\t$elm$json$Json$Decode$string);\nvar $elm$html$Html$Events$onInput = function (tagger) {\n\treturn A2(\n\t\t$elm$html$Html$Events$stopPropagationOn,\n\t\t'input',\n\t\tA2(\n\t\t\t$elm$json$Json$Decode$map,\n\t\t\t$elm$html$Html$Events$alwaysStop,\n\t\t\tA2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));\n};\nvar $author$project$Main$operatorToString = function (operator) {\n\tif (!operator) {\n\t\treturn '+';\n\t} else {\n\t\treturn '-';\n\t}\n};\nvar $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;\nvar $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;\nvar $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');\nvar $author$project$Main$viewGameTime = function (time) {\n\treturn A2(\n\t\t$elm$html$Html$div,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$Attributes$class('game-time')\n\t\t\t]),\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$text(\n\t\t\t\t$elm$core$String$fromInt(time) + ' seconds')\n\t\t\t]));\n};\nvar $elm$html$Html$li = _VirtualDom_node('li');\nvar $author$project$Main$viewHiscore = function (hiscore) {\n\treturn A2(\n\t\t$elm$html$Html$li,\n\t\t_List_Nil,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\t$elm$html$Html$text(\n\t\t\t\t'Name: ' + (hiscore.p + (', Finish time: ' + ($elm$core$String$fromInt(hiscore.Q) + ' seconds'))))\n\t\t\t]));\n};\nvar $elm$virtual_dom$VirtualDom$attribute = F2(\n\tfunction (key, value) {\n\t\treturn A2(\n\t\t\t_VirtualDom_attribute,\n\t\t\t_VirtualDom_noOnOrFormAction(key),\n\t\t\t_VirtualDom_noJavaScriptOrHtmlUri(value));\n\t});\nvar $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;\nvar $elm$core$String$fromFloat = _String_fromNumber;\nvar $elm$html$Html$progress = _VirtualDom_node('progress');\nvar $author$project$Main$viewProgress = function (questionsCompleted) {\n\treturn A2(\n\t\t$elm$html$Html$progress,\n\t\t_List_fromArray(\n\t\t\t[\n\t\t\t\tA2($elm$html$Html$Attributes$attribute, 'max', '100'),\n\t\t\t\t$elm$html$Html$Attributes$value(\n\t\t\t\t$elm$core$String$fromFloat((questionsCompleted / 5) * 100))\n\t\t\t]),\n\t\t_List_Nil);\n};\nvar $author$project$Main$view = function (model) {\n\tvar _v0 = model.f;\n\tswitch (_v0.$) {\n\t\tcase 0:\n\t\t\treturn A2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$h1,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text('Math Game')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$elm$core$List$isEmpty(model.D) ? $elm$html$Html$text('') : A2(\n\t\t\t\t\t\t$elm$html$Html$ol,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\tA2($elm$core$List$map, $author$project$Main$viewHiscore, model.D)),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('btn'),\n\t\t\t\t\t\t\t\t$elm$html$Html$Events$onClick($author$project$Main$StartGameButtonClicked)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text('Start Game!')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t\tcase 1:\n\t\t\tvar gameInfo = _v0.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\t$author$project$Main$viewProgress(gameInfo.F),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$h2,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t$elm$core$String$fromInt(gameInfo.q._) + (' ' + ($author$project$Main$operatorToString(gameInfo.q.ac) + (' ' + ($elm$core$String$fromInt(gameInfo.q.ae) + ' = '))))),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$input,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Events$onInput($author$project$Main$AnswerInputChanged),\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$value(gameInfo.A)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('btn'),\n\t\t\t\t\t\t\t\t$elm$html$Html$Events$onClick($author$project$Main$SubmitAnswerButtonClicked)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text('Submit answer')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\t$author$project$Main$viewGameTime(model.T - gameInfo.V)\n\t\t\t\t\t]));\n\t\tdefault:\n\t\t\tvar hiscore = _v0.a;\n\t\t\treturn A2(\n\t\t\t\t$elm$html$Html$div,\n\t\t\t\t_List_Nil,\n\t\t\t\t_List_fromArray(\n\t\t\t\t\t[\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$h2,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text('New hiscore!')\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$div,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text(\n\t\t\t\t\t\t\t\t'You finished in ' + ($elm$core$String$fromInt(hiscore.Q) + ' seconds!'))\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$label,\n\t\t\t\t\t\t_List_Nil,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text('Enter your name'),\n\t\t\t\t\t\t\t\tA2(\n\t\t\t\t\t\t\t\t$elm$html$Html$input,\n\t\t\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('input'),\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$value(hiscore.p),\n\t\t\t\t\t\t\t\t\t\t$elm$html$Html$Events$onInput($author$project$Main$HiscoreNameInputChanged)\n\t\t\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t\t\t_List_Nil)\n\t\t\t\t\t\t\t])),\n\t\t\t\t\t\tA2(\n\t\t\t\t\t\t$elm$html$Html$button,\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$Attributes$class('btn'),\n\t\t\t\t\t\t\t\t$elm$html$Html$Events$onClick($author$project$Main$HiscoreSubmitNameButtonClicked)\n\t\t\t\t\t\t\t]),\n\t\t\t\t\t\t_List_fromArray(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\t$elm$html$Html$text('Done!')\n\t\t\t\t\t\t\t]))\n\t\t\t\t\t]));\n\t}\n};\nvar $author$project$Main$main = $elm$browser$Browser$element(\n\t{\n\t\taT: function (_v0) {\n\t\t\treturn $author$project$Main$init;\n\t\t},\n\t\taZ: $author$project$Main$subscriptions,\n\t\ta$: $author$project$Main$update,\n\t\ta0: $author$project$Main$view\n\t});\n_Platform_export({'Main':{'init':$author$project$Main$main(\n\t$elm$json$Json$Decode$succeed(0))(0)}});}(this));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import './main.css';\nimport { Elm } from './Main.elm';\nimport * as serviceWorker from './serviceWorker';\n\nElm.Main.init({\n  node: document.getElementById('root')\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}